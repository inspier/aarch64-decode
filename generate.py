from aslutils.parse_asl_file import *

real_names = {'aarch64_udf': 'UDF_only_perm_undef', 'MLA_Z_P_ZZZ__': 'mla_z_p_zzz_', 'MLS_Z_P_ZZZ__': 'mls_z_p_zzz_',              'MAD_Z_P_ZZZ__': 'mad_z_p_zzz_', 'MSB_Z_P_ZZZ__': 'msb_z_p_zzz_', 'ADD_Z_P_ZZ__': 'add_z_p_zz_', 'SUB_Z_P_ZZ__': 'sub_z_p_zz_', 'SUBR_Z_P_ZZ__': 'subr_z_p_zz_', 'SMAX_Z_P_ZZ__': 'smax_z_p_zz_', 'UMAX_Z_P_ZZ__': 'umax_z_p_zz_', 'SMIN_Z_P_ZZ__': 'smin_z_p_zz_', 'UMIN_Z_P_ZZ__': 'umin_z_p_zz_', 'SABD_Z_P_ZZ__': 'sabd_z_p_zz_', 'UABD_Z_P_ZZ__': 'uabd_z_p_zz_', 'MUL_Z_P_ZZ__': 'mul_z_p_zz_', 'SMULH_Z_P_ZZ__': 'smulh_z_p_zz_', 'UMULH_Z_P_ZZ__': 'umulh_z_p_zz_', 'SDIV_Z_P_ZZ__': 'sdiv_z_p_zz_', 'UDIV_Z_P_ZZ__': 'udiv_z_p_zz_', 'SDIVR_Z_P_ZZ__': 'sdivr_z_p_zz_', 'UDIVR_Z_P_ZZ__': 'udivr_z_p_zz_', 'ORR_Z_P_ZZ__': 'orr_z_p_zz_', 'EOR_Z_P_ZZ__': 'eor_z_p_zz_', 'AND_Z_P_ZZ__': 'and_z_p_zz_', 'BIC_Z_P_ZZ__': 'bic_z_p_zz_', 'SADDV_R_P_Z__': 'saddv_r_p_z_', 'UADDV_R_P_Z__': 'uaddv_r_p_z_', 'SMAXV_R_P_Z__': 'smaxv_r_p_z_', 'UMAXV_R_P_Z__': 'umaxv_r_p_z_', 'SMINV_R_P_Z__': 'sminv_r_p_z_', 'UMINV_R_P_Z__': 'uminv_r_p_z_', 'MOVPRFX_Z_P_Z__': 'movprfx_z_p_z_', 'ORV_R_P_Z__': 'orv_r_p_z_', 'EORV_R_P_Z__': 'eorv_r_p_z_', 'ANDV_R_P_Z__': 'andv_r_p_z_', 'ASR_Z_P_ZI__': 'asr_z_p_zi_', 'LSR_Z_P_ZI__': 'lsr_z_p_zi_', 'LSL_Z_P_ZI__': 'lsl_z_p_zi_', 'ASRD_Z_P_ZI__': 'asrd_z_p_zi_', 'ASR_Z_P_ZZ__': 'asr_z_p_zz_', 'LSR_Z_P_ZZ__': 'lsr_z_p_zz_', 'LSL_Z_P_ZZ__': 'lsl_z_p_zz_', 'ASRR_Z_P_ZZ__': 'asrr_z_p_zz_', 'LSRR_Z_P_ZZ__': 'lsrr_z_p_zz_', 'LSLR_Z_P_ZZ__': 'lslr_z_p_zz_', 'ASR_Z_P_ZW__': 'asr_z_p_zw_', 'LSR_Z_P_ZW__': 'lsr_z_p_zw_', 'LSL_Z_P_ZW__': 'lsl_z_p_zw_', 'SXTB_Z_P_Z__': 'sxtb_z_p_z_', 'UXTB_Z_P_Z__': 'uxtb_z_p_z_', 'SXTH_Z_P_Z__': 'sxth_z_p_z_', 'UXTH_Z_P_Z__': 'uxth_z_p_z_', 'SXTW_Z_P_Z__': 'sxtw_z_p_z_', 'UXTW_Z_P_Z__': 'uxtw_z_p_z_', 'ABS_Z_P_Z__': 'abs_z_p_z_', 'NEG_Z_P_Z__': 'neg_z_p_z_', 'CLS_Z_P_Z__': 'cls_z_p_z_', 'CLZ_Z_P_Z__': 'clz_z_p_z_', 'CNT_Z_P_Z__': 'cnt_z_p_z_', 'CNOT_Z_P_Z__': 'cnot_z_p_z_', 'FABS_Z_P_Z__': 'fabs_z_p_z_', 'FNEG_Z_P_Z__': 'fneg_z_p_z_', 'NOT_Z_P_Z__': 'not_z_p_z_', 'ADD_Z_ZZ__': 'add_z_zz_', 'SUB_Z_ZZ__': 'sub_z_zz_', 'SQADD_Z_ZZ__': 'sqadd_z_zz_', 'UQADD_Z_ZZ__': 'uqadd_z_zz_', 'SQSUB_Z_ZZ__': 'sqsub_z_zz_', 'UQSUB_Z_ZZ__': 'uqsub_z_zz_', 'AND_Z_ZZ__': 'and_z_zz_', 'ORR_Z_ZZ__': 'orr_z_zz_', 'EOR_Z_ZZ__': 'eor_z_zz_', 'BIC_Z_ZZ__': 'bic_z_zz_', 'INDEX_Z_II__': 'index_z_ii_', 'INDEX_Z_RI__': 'index_z_ri_', 'INDEX_Z_IR__': 'index_z_ir_', 'INDEX_Z_RR__': 'index_z_rr_', 'ADDVL_R_RI__': 'addvl_r_ri_', 'ADDPL_R_RI__': 'addpl_r_ri_', 'RDVL_R_I__': 'rdvl_r_i_', 'ASR_Z_ZW__': 'asr_z_zw_', 'LSR_Z_ZW__': 'lsr_z_zw_', 'LSL_Z_ZW__': 'lsl_z_zw_', 'ASR_Z_ZI__': 'asr_z_zi_', 'LSR_Z_ZI__': 'lsr_z_zi_', 'LSL_Z_ZI__': 'lsl_z_zi_', 'ADR_Z_AZ_D_s32_scaled': 'adr_z_az_d_s32_scaled', 'ADR_Z_AZ_D_u32_scaled': 'adr_z_az_d_u32_scaled', 'ADR_Z_AZ_SD_same_scaled': 'adr_z_az_sd_same_scaled', 'FTSSEL_Z_ZZ__': 'ftssel_z_zz_', 'FEXPA_Z_Z__': 'fexpa_z_z_', 'MOVPRFX_Z_Z__': 'movprfx_z_z_', 'SQINCH_Z_ZS__': 'sqinch_z_zs_', 'UQINCH_Z_ZS__': 'uqinch_z_zs_', 'SQDECH_Z_ZS__': 'sqdech_z_zs_', 'UQDECH_Z_ZS__': 'uqdech_z_zs_', 'SQINCW_Z_ZS__': 'sqincw_z_zs_', 'UQINCW_Z_ZS__': 'uqincw_z_zs_', 'SQDECW_Z_ZS__': 'sqdecw_z_zs_', 'UQDECW_Z_ZS__': 'uqdecw_z_zs_', 'SQINCD_Z_ZS__': 'sqincd_z_zs_', 'UQINCD_Z_ZS__': 'uqincd_z_zs_', 'SQDECD_Z_ZS__': 'sqdecd_z_zs_', 'UQDECD_Z_ZS__': 'uqdecd_z_zs_', 'CNTB_R_S__': 'cntb_r_s_', 'CNTH_R_S__': 'cnth_r_s_', 'CNTW_R_S__': 'cntw_r_s_', 'CNTD_R_S__': 'cntd_r_s_', 'INCH_Z_ZS__': 'inch_z_zs_', 'DECH_Z_ZS__': 'dech_z_zs_', 'INCW_Z_ZS__': 'incw_z_zs_', 'DECW_Z_ZS__': 'decw_z_zs_', 'INCD_Z_ZS__': 'incd_z_zs_', 'DECD_Z_ZS__': 'decd_z_zs_', 'INCB_R_RS__': 'incb_r_rs_', 'DECB_R_RS__': 'decb_r_rs_', 'INCH_R_RS__': 'inch_r_rs_', 'DECH_R_RS__': 'dech_r_rs_', 'INCW_R_RS__': 'incw_r_rs_', 'DECW_R_RS__': 'decw_r_rs_', 'INCD_R_RS__': 'incd_r_rs_', 'DECD_R_RS__': 'decd_r_rs_', 'SQINCB_R_RS_SX': 'sqincb_r_rs_sx', 'UQINCB_R_RS_UW': 'uqincb_r_rs_uw', 'SQDECB_R_RS_SX': 'sqdecb_r_rs_sx', 'UQDECB_R_RS_UW': 'uqdecb_r_rs_uw', 'SQINCB_R_RS_X': 'sqincb_r_rs_x', 'UQINCB_R_RS_X': 'uqincb_r_rs_x', 'SQDECB_R_RS_X': 'sqdecb_r_rs_x', 'UQDECB_R_RS_X': 'uqdecb_r_rs_x', 'SQINCH_R_RS_SX': 'sqinch_r_rs_sx', 'UQINCH_R_RS_UW': 'uqinch_r_rs_uw', 'SQDECH_R_RS_SX': 'sqdech_r_rs_sx', 'UQDECH_R_RS_UW': 'uqdech_r_rs_uw', 'SQINCH_R_RS_X': 'sqinch_r_rs_x', 'UQINCH_R_RS_X': 'uqinch_r_rs_x', 'SQDECH_R_RS_X': 'sqdech_r_rs_x', 'UQDECH_R_RS_X': 'uqdech_r_rs_x', 'SQINCW_R_RS_SX': 'sqincw_r_rs_sx', 'UQINCW_R_RS_UW': 'uqincw_r_rs_uw', 'SQDECW_R_RS_SX': 'sqdecw_r_rs_sx', 'UQDECW_R_RS_UW': 'uqdecw_r_rs_uw', 'SQINCW_R_RS_X': 'sqincw_r_rs_x', 'UQINCW_R_RS_X': 'uqincw_r_rs_x', 'SQDECW_R_RS_X': 'sqdecw_r_rs_x', 'UQDECW_R_RS_X': 'uqdecw_r_rs_x', 'SQINCD_R_RS_SX': 'sqincd_r_rs_sx', 'UQINCD_R_RS_UW': 'uqincd_r_rs_uw', 'SQDECD_R_RS_SX': 'sqdecd_r_rs_sx', 'UQDECD_R_RS_UW': 'uqdecd_r_rs_uw', 'SQINCD_R_RS_X': 'sqincd_r_rs_x', 'UQINCD_R_RS_X': 'uqincd_r_rs_x', 'SQDECD_R_RS_X': 'sqdecd_r_rs_x', 'UQDECD_R_RS_X': 'uqdecd_r_rs_x', 'DUPM_Z_I__': 'dupm_z_i_', 'ORR_Z_ZI__': 'orr_z_zi_', 'EOR_Z_ZI__': 'eor_z_zi_', 'AND_Z_ZI__': 'and_z_zi_', 'CPY_Z_O_I__': 'cpy_z_o_i_', 'CPY_Z_P_I__': 'cpy_z_p_i_', 'FCPY_Z_P_I__': 'fcpy_z_p_i_', 'DUP_Z_R__': 'dup_z_r_', 'INSR_Z_R__': 'insr_z_r_', 'SUNPKLO_Z_Z__': 'sunpklo_z_z_', 'SUNPKHI_Z_Z__': 'sunpkhi_z_z_', 'UUNPKLO_Z_Z__': 'uunpklo_z_z_', 'UUNPKHI_Z_Z__': 'uunpkhi_z_z_', 'INSR_Z_V__': 'insr_z_v_', 'REV_Z_Z__': 'rev_z_z_', 'DUP_Z_Zi__': 'dup_z_zi_', 'TBL_Z_ZZ_1': 'tbl_z_zz_1', 'PUNPKLO_P_P__': 'punpklo_p_p_', 'PUNPKHI_P_P__': 'punpkhi_p_p_', 'ZIP1_P_PP__': 'zip1_p_pp_', 'ZIP2_P_PP__': 'zip2_p_pp_', 'UZP1_P_PP__': 'uzp1_p_pp_', 'UZP2_P_PP__': 'uzp2_p_pp_', 'TRN1_P_PP__': 'trn1_p_pp_', 'TRN2_P_PP__': 'trn2_p_pp_', 'REV_P_P__': 'rev_p_p_', 'ZIP1_Z_ZZ__': 'zip1_z_zz_', 'ZIP2_Z_ZZ__': 'zip2_z_zz_', 'UZP1_Z_ZZ__': 'uzp1_z_zz_', 'UZP2_Z_ZZ__': 'uzp2_z_zz_', 'TRN1_Z_ZZ__': 'trn1_z_zz_', 'TRN2_Z_ZZ__': 'trn2_z_zz_', 'CPY_Z_P_V__': 'cpy_z_p_v_', 'COMPACT_Z_P_Z__': 'compact_z_p_z_', 'LASTA_R_P_Z__': 'lasta_r_p_z_', 'LASTB_R_P_Z__': 'lastb_r_p_z_', 'LASTA_V_P_Z__': 'lasta_v_p_z_', 'LASTB_V_P_Z__': 'lastb_v_p_z_', 'REVB_Z_Z__': 'revb_z_z_', 'REVH_Z_Z__': 'revh_z_z_', 'REVW_Z_Z__': 'revw_z_z_', 'RBIT_Z_P_Z__': 'rbit_z_p_z_', 'CPY_Z_P_R__': 'cpy_z_p_r_', 'CLASTA_Z_P_ZZ__': 'clasta_z_p_zz_', 'CLASTB_Z_P_ZZ__': 'clastb_z_p_zz_', 'CLASTA_V_P_Z__': 'clasta_v_p_z_', 'CLASTB_V_P_Z__': 'clastb_v_p_z_', 'SPLICE_Z_P_ZZ_Des': 'splice_z_p_zz_des', 'CLASTA_R_P_Z__': 'clasta_r_p_z_', 'CLASTB_R_P_Z__': 'clastb_r_p_z_', 'SEL_Z_P_ZZ__': 'sel_z_p_zz_', 'EXT_Z_ZI_Des': 'ext_z_zi_des', 'ZIP1_Z_ZZ_Q': 'zip1_z_zz_q', 'ZIP2_Z_ZZ_Q': 'zip2_z_zz_q', 'UZP1_Z_ZZ_Q': 'uzp1_z_zz_q', 'UZP2_Z_ZZ_Q': 'uzp2_z_zz_q', 'TRN1_Z_ZZ_Q': 'trn1_z_zz_q', 'TRN2_Z_ZZ_Q': 'trn2_z_zz_q', 'CMPHS_P_P_ZZ__': 'cmphs_p_p_zz_', 'CMPHI_P_P_ZZ__': 'cmphi_p_p_zz_', 'CMPEQ_P_P_ZW__': 'cmpeq_p_p_zw_', 'CMPNE_P_P_ZW__': 'cmpne_p_p_zw_', 'CMPGE_P_P_ZZ__': 'cmpge_p_p_zz_', 'CMPGT_P_P_ZZ__': 'cmpgt_p_p_zz_', 'CMPEQ_P_P_ZZ__': 'cmpeq_p_p_zz_', 'CMPNE_P_P_ZZ__': 'cmpne_p_p_zz_', 'CMPGE_P_P_ZW__': 'cmpge_p_p_zw_', 'CMPGT_P_P_ZW__': 'cmpgt_p_p_zw_', 'CMPLT_P_P_ZW__': 'cmplt_p_p_zw_', 'CMPLE_P_P_ZW__': 'cmple_p_p_zw_', 'CMPHS_P_P_ZW__': 'cmphs_p_p_zw_', 'CMPHI_P_P_ZW__': 'cmphi_p_p_zw_', 'CMPLO_P_P_ZW__': 'cmplo_p_p_zw_', 'CMPLS_P_P_ZW__': 'cmpls_p_p_zw_', 'CMPHS_P_P_ZI__': 'cmphs_p_p_zi_', 'CMPHI_P_P_ZI__': 'cmphi_p_p_zi_', 'CMPLO_P_P_ZI__': 'cmplo_p_p_zi_', 'CMPLS_P_P_ZI__': 'cmpls_p_p_zi_', 'CMPGE_P_P_ZI__': 'cmpge_p_p_zi_', 'CMPGT_P_P_ZI__': 'cmpgt_p_p_zi_', 'CMPLT_P_P_ZI__': 'cmplt_p_p_zi_', 'CMPLE_P_P_ZI__': 'cmple_p_p_zi_', 'CMPEQ_P_P_ZI__': 'cmpeq_p_p_zi_', 'CMPNE_P_P_ZI__': 'cmpne_p_p_zi_', 'AND_P_P_PP_Z': 'and_p_p_pp_z', 'BIC_P_P_PP_Z': 'bic_p_p_pp_z', 'EOR_P_P_PP_Z': 'eor_p_p_pp_z', 'SEL_P_P_PP__': 'sel_p_p_pp_', 'ANDS_P_P_PP_Z': 'ands_p_p_pp_z', 'BICS_P_P_PP_Z': 'bics_p_p_pp_z', 'EORS_P_P_PP_Z': 'eors_p_p_pp_z', 'ORR_P_P_PP_Z': 'orr_p_p_pp_z', 'ORN_P_P_PP_Z': 'orn_p_p_pp_z', 'NOR_P_P_PP_Z': 'nor_p_p_pp_z', 'NAND_P_P_PP_Z': 'nand_p_p_pp_z', 'ORRS_P_P_PP_Z': 'orrs_p_p_pp_z', 'ORNS_P_P_PP_Z': 'orns_p_p_pp_z', 'NORS_P_P_PP_Z': 'nors_p_p_pp_z', 'NANDS_P_P_PP_Z': 'nands_p_p_pp_z', 'BRKPA_P_P_PP__': 'brkpa_p_p_pp_', 'BRKPB_P_P_PP__': 'brkpb_p_p_pp_', 'BRKPAS_P_P_PP__': 'brkpas_p_p_pp_', 'BRKPBS_P_P_PP__': 'brkpbs_p_p_pp_', 'BRKN_P_P_PP__': 'brkn_p_p_pp_', 'BRKNS_P_P_PP__': 'brkns_p_p_pp_', 'BRKA_P_P_P__': 'brka_p_p_p_', 'BRKAS_P_P_P_Z': 'brkas_p_p_p_z', 'BRKB_P_P_P__': 'brkb_p_p_p_', 'BRKBS_P_P_P_Z': 'brkbs_p_p_p_z', 'PTEST__P_P__': 'ptest_p_p_', 'PFIRST_P_P_P__': 'pfirst_p_p_p_', 'PFALSE_P__': 'pfalse_p_', 'RDFFR_P_P_F__': 'rdffr_p_p_f_', 'RDFFRS_P_P_F__': 'rdffrs_p_p_f_', 'PNEXT_P_P_P__': 'pnext_p_p_p_', 'RDFFR_P_F__': 'rdffr_p_f_', 'PTRUE_P_S__': 'ptrue_p_s_', 'PTRUES_P_S__': 'ptrues_p_s_', 'WHILELT_P_P_RR__': 'whilelt_p_p_rr_', 'WHILELE_P_P_RR__': 'whilele_p_p_rr_', 'WHILELO_P_P_RR__': 'whilelo_p_p_rr_', 'WHILELS_P_P_RR__': 'whilels_p_p_rr_', 'CTERMEQ_RR__': 'ctermeq_rr_', 'CTERMNE_RR__': 'ctermne_rr_', 'ADD_Z_ZI__': 'add_z_zi_', 'SUB_Z_ZI__': 'sub_z_zi_', 'SUBR_Z_ZI__': 'subr_z_zi_', 'SQADD_Z_ZI__': 'sqadd_z_zi_', 'UQADD_Z_ZI__': 'uqadd_z_zi_', 'SQSUB_Z_ZI__': 'sqsub_z_zi_', 'UQSUB_Z_ZI__': 'uqsub_z_zi_', 'SMAX_Z_ZI__': 'smax_z_zi_', 'UMAX_Z_ZI__': 'umax_z_zi_', 'SMIN_Z_ZI__': 'smin_z_zi_', 'UMIN_Z_ZI__': 'umin_z_zi_', 'MUL_Z_ZI__': 'mul_z_zi_', 'DUP_Z_I__': 'dup_z_i_', 'FDUP_Z_I__': 'fdup_z_i_', 'CNTP_R_P_P__': 'cntp_r_p_p_', 'SQINCP_Z_P_Z__': 'sqincp_z_p_z_', 'UQINCP_Z_P_Z__': 'uqincp_z_p_z_', 'SQDECP_Z_P_Z__': 'sqdecp_z_p_z_', 'UQDECP_Z_P_Z__': 'uqdecp_z_p_z_', 'SQINCP_R_P_R_SX': 'sqincp_r_p_r_sx', 'SQINCP_R_P_R_X': 'sqincp_r_p_r_x', 'UQINCP_R_P_R_UW': 'uqincp_r_p_r_uw', 'UQINCP_R_P_R_X': 'uqincp_r_p_r_x', 'SQDECP_R_P_R_SX': 'sqdecp_r_p_r_sx', 'SQDECP_R_P_R_X': 'sqdecp_r_p_r_x', 'UQDECP_R_P_R_UW': 'uqdecp_r_p_r_uw', 'UQDECP_R_P_R_X': 'uqdecp_r_p_r_x', 'INCP_Z_P_Z__': 'incp_z_p_z_', 'DECP_Z_P_Z__': 'decp_z_p_z_', 'INCP_R_P_R__': 'incp_r_p_r_', 'DECP_R_P_R__': 'decp_r_p_r_', 'WRFFR_F_P__': 'wrffr_f_p_', 'SETFFR_F__': 'setffr_f_', 'SDOT_Z_ZZZ__': 'sdot_z_zzz_', 'UDOT_Z_ZZZ__': 'udot_z_zzz_', 'USDOT_Z_ZZZ_S': 'usdot_z_zzz_s', 'SDOT_Z_ZZZi_S': 'sdot_z_zzzi_s', 'UDOT_Z_ZZZi_S': 'udot_z_zzzi_s', 'SDOT_Z_ZZZi_D': 'sdot_z_zzzi_d', 'UDOT_Z_ZZZi_D': 'udot_z_zzzi_d', 'USDOT_Z_ZZZi_S': 'usdot_z_zzzi_s', 'SUDOT_Z_ZZZi_S': 'sudot_z_zzzi_s', 'SMMLA_Z_ZZZ__': 'smmla_z_zzz_', 'USMMLA_Z_ZZZ__': 'usmmla_z_zzz_', 'UMMLA_Z_ZZZ__': 'ummla_z_zzz_', 'FCMLA_Z_P_ZZZ__': 'fcmla_z_p_zzz_', 'FCADD_Z_P_ZZ__': 'fcadd_z_p_zz_', 'BFCVTNT_Z_P_Z_S2BF': 'bfcvtnt_z_p_z_s2bf', 'FMLA_Z_ZZZi_H': 'fmla_z_zzzi_h', 'FMLS_Z_ZZZi_H': 'fmls_z_zzzi_h', 'FMLA_Z_ZZZi_S': 'fmla_z_zzzi_s', 'FMLS_Z_ZZZi_S': 'fmls_z_zzzi_s', 'FMLA_Z_ZZZi_D': 'fmla_z_zzzi_d', 'FMLS_Z_ZZZi_D': 'fmls_z_zzzi_d', 'FCMLA_Z_ZZZi_H': 'fcmla_z_zzzi_h', 'FCMLA_Z_ZZZi_S': 'fcmla_z_zzzi_s', 'FMUL_Z_ZZi_H': 'fmul_z_zzi_h', 'FMUL_Z_ZZi_S': 'fmul_z_zzi_s', 'FMUL_Z_ZZi_D': 'fmul_z_zzi_d', 'BFDOT_Z_ZZZi__': 'bfdot_z_zzzi_', 'BFMLALB_Z_ZZZi__': 'bfmlalb_z_zzzi_', 'BFMLALT_Z_ZZZi__': 'bfmlalt_z_zzzi_', 'BFDOT_Z_ZZZ__': 'bfdot_z_zzz_', 'BFMLALB_Z_ZZZ__': 'bfmlalb_z_zzz_', 'BFMLALT_Z_ZZZ__': 'bfmlalt_z_zzz_', 'BFMMLA_Z_ZZZ__': 'bfmmla_z_zzz_', 'FMMLA_Z_ZZZ_S': 'fmmla_z_zzz_s', 'FMMLA_Z_ZZZ_D': 'fmmla_z_zzz_d', 'FCMGE_P_P_ZZ__': 'fcmge_p_p_zz_', 'FCMGT_P_P_ZZ__': 'fcmgt_p_p_zz_', 'FCMEQ_P_P_ZZ__': 'fcmeq_p_p_zz_', 'FCMNE_P_P_ZZ__': 'fcmne_p_p_zz_', 'FCMUO_P_P_ZZ__': 'fcmuo_p_p_zz_', 'FACGE_P_P_ZZ__': 'facge_p_p_zz_', 'FACGT_P_P_ZZ__': 'facgt_p_p_zz_', 'FADD_Z_ZZ__': 'fadd_z_zz_', 'FSUB_Z_ZZ__': 'fsub_z_zz_', 'FMUL_Z_ZZ__': 'fmul_z_zz_', 'FTSMUL_Z_ZZ__': 'ftsmul_z_zz_', 'FRECPS_Z_ZZ__': 'frecps_z_zz_', 'FRSQRTS_Z_ZZ__': 'frsqrts_z_zz_', 'FADD_Z_P_ZZ__': 'fadd_z_p_zz_', 'FSUB_Z_P_ZZ__': 'fsub_z_p_zz_', 'FMUL_Z_P_ZZ__': 'fmul_z_p_zz_', 'FSUBR_Z_P_ZZ__': 'fsubr_z_p_zz_', 'FMAXNM_Z_P_ZZ__': 'fmaxnm_z_p_zz_', 'FMINNM_Z_P_ZZ__': 'fminnm_z_p_zz_', 'FMAX_Z_P_ZZ__': 'fmax_z_p_zz_', 'FMIN_Z_P_ZZ__': 'fmin_z_p_zz_', 'FABD_Z_P_ZZ__': 'fabd_z_p_zz_', 'FSCALE_Z_P_ZZ__': 'fscale_z_p_zz_', 'FMULX_Z_P_ZZ__': 'fmulx_z_p_zz_', 'FDIVR_Z_P_ZZ__': 'fdivr_z_p_zz_', 'FDIV_Z_P_ZZ__': 'fdiv_z_p_zz_', 'FTMAD_Z_ZZI__': 'ftmad_z_zzi_', 'FADD_Z_P_ZS__': 'fadd_z_p_zs_', 'FSUB_Z_P_ZS__': 'fsub_z_p_zs_', 'FMUL_Z_P_ZS__': 'fmul_z_p_zs_', 'FSUBR_Z_P_ZS__': 'fsubr_z_p_zs_', 'FMAXNM_Z_P_ZS__': 'fmaxnm_z_p_zs_', 'FMINNM_Z_P_ZS__': 'fminnm_z_p_zs_', 'FMAX_Z_P_ZS__': 'fmax_z_p_zs_', 'FMIN_Z_P_ZS__': 'fmin_z_p_zs_', 'FRINTN_Z_P_Z__': 'frintn_z_p_z_', 'FRINTP_Z_P_Z__': 'frintp_z_p_z_', 'FRINTM_Z_P_Z__': 'frintm_z_p_z_', 'FRINTZ_Z_P_Z__': 'frintz_z_p_z_', 'FRINTA_Z_P_Z__': 'frinta_z_p_z_', 'FRINTX_Z_P_Z__': 'frintx_z_p_z_', 'FRINTI_Z_P_Z__': 'frinti_z_p_z_', 'FCVT_Z_P_Z_S2H': 'fcvt_z_p_z_s2h', 'FCVT_Z_P_Z_H2S': 'fcvt_z_p_z_h2s', 'BFCVT_Z_P_Z_S2BF': 'bfcvt_z_p_z_s2bf', 'FCVT_Z_P_Z_D2H': 'fcvt_z_p_z_d2h', 'FCVT_Z_P_Z_H2D': 'fcvt_z_p_z_h2d', 'FCVT_Z_P_Z_D2S': 'fcvt_z_p_z_d2s', 'FCVT_Z_P_Z_S2D': 'fcvt_z_p_z_s2d', 'FRECPX_Z_P_Z__': 'frecpx_z_p_z_', 'FSQRT_Z_P_Z__': 'fsqrt_z_p_z_', 'SCVTF_Z_P_Z_H2FP16': 'scvtf_z_p_z_h2fp16', 'UCVTF_Z_P_Z_H2FP16': 'ucvtf_z_p_z_h2fp16', 'SCVTF_Z_P_Z_W2FP16': 'scvtf_z_p_z_w2fp16', 'UCVTF_Z_P_Z_W2FP16': 'ucvtf_z_p_z_w2fp16', 'SCVTF_Z_P_Z_X2FP16': 'scvtf_z_p_z_x2fp16', 'UCVTF_Z_P_Z_X2FP16': 'ucvtf_z_p_z_x2fp16', 'SCVTF_Z_P_Z_W2S': 'scvtf_z_p_z_w2s', 'UCVTF_Z_P_Z_W2S': 'ucvtf_z_p_z_w2s', 'SCVTF_Z_P_Z_W2D': 'scvtf_z_p_z_w2d', 'UCVTF_Z_P_Z_W2D': 'ucvtf_z_p_z_w2d', 'SCVTF_Z_P_Z_X2S': 'scvtf_z_p_z_x2s', 'UCVTF_Z_P_Z_X2S': 'ucvtf_z_p_z_x2s', 'SCVTF_Z_P_Z_X2D': 'scvtf_z_p_z_x2d', 'UCVTF_Z_P_Z_X2D': 'ucvtf_z_p_z_x2d', 'FCVTZS_Z_P_Z_FP162H': 'fcvtzs_z_p_z_fp162h', 'FCVTZU_Z_P_Z_FP162H': 'fcvtzu_z_p_z_fp162h', 'FCVTZS_Z_P_Z_FP162W': 'fcvtzs_z_p_z_fp162w', 'FCVTZU_Z_P_Z_FP162W': 'fcvtzu_z_p_z_fp162w', 'FCVTZS_Z_P_Z_FP162X': 'fcvtzs_z_p_z_fp162x', 'FCVTZU_Z_P_Z_FP162X': 'fcvtzu_z_p_z_fp162x', 'FCVTZS_Z_P_Z_S2W': 'fcvtzs_z_p_z_s2w', 'FCVTZU_Z_P_Z_S2W': 'fcvtzu_z_p_z_s2w', 'FCVTZS_Z_P_Z_D2W': 'fcvtzs_z_p_z_d2w', 'FCVTZU_Z_P_Z_D2W': 'fcvtzu_z_p_z_d2w', 'FCVTZS_Z_P_Z_S2X': 'fcvtzs_z_p_z_s2x', 'FCVTZU_Z_P_Z_S2X': 'fcvtzu_z_p_z_s2x', 'FCVTZS_Z_P_Z_D2X': 'fcvtzs_z_p_z_d2x', 'FCVTZU_Z_P_Z_D2X': 'fcvtzu_z_p_z_d2x', 'FADDV_V_P_Z__': 'faddv_v_p_z_', 'FMAXNMV_V_P_Z__': 'fmaxnmv_v_p_z_', 'FMINNMV_V_P_Z__': 'fminnmv_v_p_z_', 'FMAXV_V_P_Z__': 'fmaxv_v_p_z_', 'FMINV_V_P_Z__': 'fminv_v_p_z_', 'FRECPE_Z_Z__': 'frecpe_z_z_', 'FRSQRTE_Z_Z__': 'frsqrte_z_z_', 'FCMGE_P_P_Z0__': 'fcmge_p_p_z0_', 'FCMGT_P_P_Z0__': 'fcmgt_p_p_z0_', 'FCMLT_P_P_Z0__': 'fcmlt_p_p_z0_', 'FCMLE_P_P_Z0__': 'fcmle_p_p_z0_', 'FCMEQ_P_P_Z0__': 'fcmeq_p_p_z0_', 'FCMNE_P_P_Z0__': 'fcmne_p_p_z0_', 'FADDA_V_P_Z__': 'fadda_v_p_z_', 'FMLA_Z_P_ZZZ__': 'fmla_z_p_zzz_', 'FMLS_Z_P_ZZZ__': 'fmls_z_p_zzz_', 'FNMLA_Z_P_ZZZ__': 'fnmla_z_p_zzz_', 'FNMLS_Z_P_ZZZ__': 'fnmls_z_p_zzz_', 'FMAD_Z_P_ZZZ__': 'fmad_z_p_zzz_', 'FMSB_Z_P_ZZZ__': 'fmsb_z_p_zzz_', 'FNMAD_Z_P_ZZZ__': 'fnmad_z_p_zzz_', 'FNMSB_Z_P_ZZZ__': 'fnmsb_z_p_zzz_', 'PRFB_I_P_BZ_S_x32_scaled': 'prfb_i_p_bz_s_x32_scaled', 'PRFH_I_P_BZ_S_x32_scaled': 'prfh_i_p_bz_s_x32_scaled', 'PRFW_I_P_BZ_S_x32_scaled': 'prfw_i_p_bz_s_x32_scaled', 'PRFD_I_P_BZ_S_x32_scaled': 'prfd_i_p_bz_s_x32_scaled', 'LD1SH_Z_P_BZ_S_x32_scaled': 'ld1sh_z_p_bz_s_x32_scaled', 'LDFF1SH_Z_P_BZ_S_x32_scaled': 'ldff1sh_z_p_bz_s_x32_scaled', 'LD1H_Z_P_BZ_S_x32_scaled': 'ld1h_z_p_bz_s_x32_scaled', 'LDFF1H_Z_P_BZ_S_x32_scaled': 'ldff1h_z_p_bz_s_x32_scaled', 'LD1W_Z_P_BZ_S_x32_scaled': 'ld1w_z_p_bz_s_x32_scaled', 'LDFF1W_Z_P_BZ_S_x32_scaled': 'ldff1w_z_p_bz_s_x32_scaled', 'LDR_P_BI__': 'ldr_p_bi_', 'LDR_Z_BI__': 'ldr_z_bi_', 'PRFB_I_P_BI_S': 'prfb_i_p_bi_s', 'PRFH_I_P_BI_S': 'prfh_i_p_bi_s', 'PRFW_I_P_BI_S': 'prfw_i_p_bi_s', 'PRFD_I_P_BI_S': 'prfd_i_p_bi_s', 'LD1SB_Z_P_BZ_S_x32_unscaled': 'ld1sb_z_p_bz_s_x32_unscaled', 'LDFF1SB_Z_P_BZ_S_x32_unscaled': 'ldff1sb_z_p_bz_s_x32_unscaled', 'LD1B_Z_P_BZ_S_x32_unscaled': 'ld1b_z_p_bz_s_x32_unscaled', 'LDFF1B_Z_P_BZ_S_x32_unscaled': 'ldff1b_z_p_bz_s_x32_unscaled', 'LD1SH_Z_P_BZ_S_x32_unscaled': 'ld1sh_z_p_bz_s_x32_unscaled', 'LDFF1SH_Z_P_BZ_S_x32_unscaled': 'ldff1sh_z_p_bz_s_x32_unscaled', 'LD1H_Z_P_BZ_S_x32_unscaled': 'ld1h_z_p_bz_s_x32_unscaled', 'LDFF1H_Z_P_BZ_S_x32_unscaled': 'ldff1h_z_p_bz_s_x32_unscaled', 'LD1W_Z_P_BZ_S_x32_unscaled': 'ld1w_z_p_bz_s_x32_unscaled', 'LDFF1W_Z_P_BZ_S_x32_unscaled': 'ldff1w_z_p_bz_s_x32_unscaled', 'PRFB_I_P_BR_S': 'prfb_i_p_br_s', 'PRFH_I_P_BR_S': 'prfh_i_p_br_s', 'PRFW_I_P_BR_S': 'prfw_i_p_br_s', 'PRFD_I_P_BR_S': 'prfd_i_p_br_s', 'PRFB_I_P_AI_S': 'prfb_i_p_ai_s', 'PRFH_I_P_AI_S': 'prfh_i_p_ai_s', 'PRFW_I_P_AI_S': 'prfw_i_p_ai_s', 'PRFD_I_P_AI_S': 'prfd_i_p_ai_s', 'LD1SB_Z_P_AI_S': 'ld1sb_z_p_ai_s', 'LDFF1SB_Z_P_AI_S': 'ldff1sb_z_p_ai_s', 'LD1B_Z_P_AI_S': 'ld1b_z_p_ai_s', 'LDFF1B_Z_P_AI_S': 'ldff1b_z_p_ai_s', 'LD1SH_Z_P_AI_S': 'ld1sh_z_p_ai_s', 'LDFF1SH_Z_P_AI_S': 'ldff1sh_z_p_ai_s', 'LD1H_Z_P_AI_S': 'ld1h_z_p_ai_s', 'LDFF1H_Z_P_AI_S': 'ldff1h_z_p_ai_s', 'LD1W_Z_P_AI_S': 'ld1w_z_p_ai_s', 'LDFF1W_Z_P_AI_S': 'ldff1w_z_p_ai_s', 'LD1RB_Z_P_BI_U8': 'ld1rb_z_p_bi_u8', 'LD1RB_Z_P_BI_U16': 'ld1rb_z_p_bi_u16', 'LD1RB_Z_P_BI_U32': 'ld1rb_z_p_bi_u32', 'LD1RB_Z_P_BI_U64': 'ld1rb_z_p_bi_u64', 'LD1RSW_Z_P_BI_S64': 'ld1rsw_z_p_bi_s64', 'LD1RH_Z_P_BI_U16': 'ld1rh_z_p_bi_u16', 'LD1RH_Z_P_BI_U32': 'ld1rh_z_p_bi_u32', 'LD1RH_Z_P_BI_U64': 'ld1rh_z_p_bi_u64', 'LD1RSH_Z_P_BI_S64': 'ld1rsh_z_p_bi_s64', 'LD1RSH_Z_P_BI_S32': 'ld1rsh_z_p_bi_s32', 'LD1RW_Z_P_BI_U32': 'ld1rw_z_p_bi_u32', 'LD1RW_Z_P_BI_U64': 'ld1rw_z_p_bi_u64', 'LD1RSB_Z_P_BI_S64': 'ld1rsb_z_p_bi_s64', 'LD1RSB_Z_P_BI_S32': 'ld1rsb_z_p_bi_s32', 'LD1RSB_Z_P_BI_S16': 'ld1rsb_z_p_bi_s16', 'LD1RD_Z_P_BI_U64': 'ld1rd_z_p_bi_u64', 'LDNT1B_Z_P_BI_Contiguous': 'ldnt1b_z_p_bi_contiguous', 'LDNT1H_Z_P_BI_Contiguous': 'ldnt1h_z_p_bi_contiguous', 'LDNT1W_Z_P_BI_Contiguous': 'ldnt1w_z_p_bi_contiguous', 'LDNT1D_Z_P_BI_Contiguous': 'ldnt1d_z_p_bi_contiguous', 'LDNT1B_Z_P_BR_Contiguous': 'ldnt1b_z_p_br_contiguous', 'LDNT1H_Z_P_BR_Contiguous': 'ldnt1h_z_p_br_contiguous', 'LDNT1W_Z_P_BR_Contiguous': 'ldnt1w_z_p_br_contiguous', 'LDNT1D_Z_P_BR_Contiguous': 'ldnt1d_z_p_br_contiguous', 'LD2B_Z_P_BI_Contiguous': 'ld2b_z_p_bi_contiguous', 'LD3B_Z_P_BI_Contiguous': 'ld3b_z_p_bi_contiguous', 'LD4B_Z_P_BI_Contiguous': 'ld4b_z_p_bi_contiguous', 'LD2H_Z_P_BI_Contiguous': 'ld2h_z_p_bi_contiguous', 'LD3H_Z_P_BI_Contiguous': 'ld3h_z_p_bi_contiguous', 'LD4H_Z_P_BI_Contiguous': 'ld4h_z_p_bi_contiguous', 'LD2W_Z_P_BI_Contiguous': 'ld2w_z_p_bi_contiguous', 'LD3W_Z_P_BI_Contiguous': 'ld3w_z_p_bi_contiguous', 'LD4W_Z_P_BI_Contiguous': 'ld4w_z_p_bi_contiguous', 'LD2D_Z_P_BI_Contiguous': 'ld2d_z_p_bi_contiguous', 'LD3D_Z_P_BI_Contiguous': 'ld3d_z_p_bi_contiguous', 'LD4D_Z_P_BI_Contiguous': 'ld4d_z_p_bi_contiguous', 'LD2B_Z_P_BR_Contiguous': 'ld2b_z_p_br_contiguous', 'LD3B_Z_P_BR_Contiguous': 'ld3b_z_p_br_contiguous', 'LD4B_Z_P_BR_Contiguous': 'ld4b_z_p_br_contiguous', 'LD2H_Z_P_BR_Contiguous': 'ld2h_z_p_br_contiguous', 'LD3H_Z_P_BR_Contiguous': 'ld3h_z_p_br_contiguous', 'LD4H_Z_P_BR_Contiguous': 'ld4h_z_p_br_contiguous', 'LD2W_Z_P_BR_Contiguous': 'ld2w_z_p_br_contiguous', 'LD3W_Z_P_BR_Contiguous': 'ld3w_z_p_br_contiguous', 'LD4W_Z_P_BR_Contiguous': 'ld4w_z_p_br_contiguous', 'LD2D_Z_P_BR_Contiguous': 'ld2d_z_p_br_contiguous', 'LD3D_Z_P_BR_Contiguous': 'ld3d_z_p_br_contiguous', 'LD4D_Z_P_BR_Contiguous': 'ld4d_z_p_br_contiguous', 'LD1RQB_Z_P_BI_U8': 'ld1rqb_z_p_bi_u8', 'LD1ROB_Z_P_BI_U8': 'ld1rob_z_p_bi_u8', 'LD1RQH_Z_P_BI_U16': 'ld1rqh_z_p_bi_u16', 'LD1ROH_Z_P_BI_U16': 'ld1roh_z_p_bi_u16', 'LD1RQW_Z_P_BI_U32': 'ld1rqw_z_p_bi_u32', 'LD1ROW_Z_P_BI_U32': 'ld1row_z_p_bi_u32', 'LD1RQD_Z_P_BI_U64': 'ld1rqd_z_p_bi_u64', 'LD1ROD_Z_P_BI_U64': 'ld1rod_z_p_bi_u64', 'LD1B_Z_P_BI_U8': 'ld1b_z_p_bi_u8', 'LD1B_Z_P_BI_U16': 'ld1b_z_p_bi_u16', 'LD1B_Z_P_BI_U32': 'ld1b_z_p_bi_u32', 'LD1B_Z_P_BI_U64': 'ld1b_z_p_bi_u64', 'LD1SW_Z_P_BI_S64': 'ld1sw_z_p_bi_s64', 'LD1H_Z_P_BI_U16': 'ld1h_z_p_bi_u16', 'LD1H_Z_P_BI_U32': 'ld1h_z_p_bi_u32', 'LD1H_Z_P_BI_U64': 'ld1h_z_p_bi_u64', 'LD1SH_Z_P_BI_S64': 'ld1sh_z_p_bi_s64', 'LD1SH_Z_P_BI_S32': 'ld1sh_z_p_bi_s32', 'LD1W_Z_P_BI_U32': 'ld1w_z_p_bi_u32', 'LD1W_Z_P_BI_U64': 'ld1w_z_p_bi_u64', 'LD1SB_Z_P_BI_S64': 'ld1sb_z_p_bi_s64', 'LD1SB_Z_P_BI_S32': 'ld1sb_z_p_bi_s32', 'LD1SB_Z_P_BI_S16': 'ld1sb_z_p_bi_s16', 'LD1D_Z_P_BI_U64': 'ld1d_z_p_bi_u64', 'LDNF1B_Z_P_BI_U8': 'ldnf1b_z_p_bi_u8', 'LDNF1B_Z_P_BI_U16': 'ldnf1b_z_p_bi_u16', 'LDNF1B_Z_P_BI_U32': 'ldnf1b_z_p_bi_u32', 'LDNF1B_Z_P_BI_U64': 'ldnf1b_z_p_bi_u64', 'LDNF1SW_Z_P_BI_S64': 'ldnf1sw_z_p_bi_s64', 'LDNF1H_Z_P_BI_U16': 'ldnf1h_z_p_bi_u16', 'LDNF1H_Z_P_BI_U32': 'ldnf1h_z_p_bi_u32', 'LDNF1H_Z_P_BI_U64': 'ldnf1h_z_p_bi_u64', 'LDNF1SH_Z_P_BI_S64': 'ldnf1sh_z_p_bi_s64', 'LDNF1SH_Z_P_BI_S32': 'ldnf1sh_z_p_bi_s32', 'LDNF1W_Z_P_BI_U32': 'ldnf1w_z_p_bi_u32', 'LDNF1W_Z_P_BI_U64': 'ldnf1w_z_p_bi_u64', 'LDNF1SB_Z_P_BI_S64': 'ldnf1sb_z_p_bi_s64', 'LDNF1SB_Z_P_BI_S32': 'ldnf1sb_z_p_bi_s32', 'LDNF1SB_Z_P_BI_S16': 'ldnf1sb_z_p_bi_s16', 'LDNF1D_Z_P_BI_U64': 'ldnf1d_z_p_bi_u64', 'LD1RQB_Z_P_BR_Contiguous': 'ld1rqb_z_p_br_contiguous', 'LD1ROB_Z_P_BR_Contiguous': 'ld1rob_z_p_br_contiguous', 'LD1RQH_Z_P_BR_Contiguous': 'ld1rqh_z_p_br_contiguous', 'LD1ROH_Z_P_BR_Contiguous': 'ld1roh_z_p_br_contiguous', 'LD1RQW_Z_P_BR_Contiguous': 'ld1rqw_z_p_br_contiguous', 'LD1ROW_Z_P_BR_Contiguous': 'ld1row_z_p_br_contiguous', 'LD1RQD_Z_P_BR_Contiguous': 'ld1rqd_z_p_br_contiguous', 'LD1ROD_Z_P_BR_Contiguous': 'ld1rod_z_p_br_contiguous', 'LD1B_Z_P_BR_U8': 'ld1b_z_p_br_u8', 'LD1B_Z_P_BR_U16': 'ld1b_z_p_br_u16', 'LD1B_Z_P_BR_U32': 'ld1b_z_p_br_u32', 'LD1B_Z_P_BR_U64': 'ld1b_z_p_br_u64', 'LD1SW_Z_P_BR_S64': 'ld1sw_z_p_br_s64', 'LD1H_Z_P_BR_U16': 'ld1h_z_p_br_u16', 'LD1H_Z_P_BR_U32': 'ld1h_z_p_br_u32', 'LD1H_Z_P_BR_U64': 'ld1h_z_p_br_u64', 'LD1SH_Z_P_BR_S64': 'ld1sh_z_p_br_s64', 'LD1SH_Z_P_BR_S32': 'ld1sh_z_p_br_s32', 'LD1W_Z_P_BR_U32': 'ld1w_z_p_br_u32', 'LD1W_Z_P_BR_U64': 'ld1w_z_p_br_u64', 'LD1SB_Z_P_BR_S64': 'ld1sb_z_p_br_s64', 'LD1SB_Z_P_BR_S32': 'ld1sb_z_p_br_s32', 'LD1SB_Z_P_BR_S16': 'ld1sb_z_p_br_s16', 'LD1D_Z_P_BR_U64': 'ld1d_z_p_br_u64', 'LDFF1B_Z_P_BR_U8': 'ldff1b_z_p_br_u8', 'LDFF1B_Z_P_BR_U16': 'ldff1b_z_p_br_u16', 'LDFF1B_Z_P_BR_U32': 'ldff1b_z_p_br_u32', 'LDFF1B_Z_P_BR_U64': 'ldff1b_z_p_br_u64', 'LDFF1SW_Z_P_BR_S64': 'ldff1sw_z_p_br_s64', 'LDFF1H_Z_P_BR_U16': 'ldff1h_z_p_br_u16', 'LDFF1H_Z_P_BR_U32': 'ldff1h_z_p_br_u32', 'LDFF1H_Z_P_BR_U64': 'ldff1h_z_p_br_u64', 'LDFF1SH_Z_P_BR_S64': 'ldff1sh_z_p_br_s64', 'LDFF1SH_Z_P_BR_S32': 'ldff1sh_z_p_br_s32', 'LDFF1W_Z_P_BR_U32': 'ldff1w_z_p_br_u32', 'LDFF1W_Z_P_BR_U64': 'ldff1w_z_p_br_u64', 'LDFF1SB_Z_P_BR_S64': 'ldff1sb_z_p_br_s64', 'LDFF1SB_Z_P_BR_S32': 'ldff1sb_z_p_br_s32', 'LDFF1SB_Z_P_BR_S16': 'ldff1sb_z_p_br_s16', 'LDFF1D_Z_P_BR_U64': 'ldff1d_z_p_br_u64', 'PRFB_I_P_BZ_D_64_scaled': 'prfb_i_p_bz_d_64_scaled', 'PRFH_I_P_BZ_D_64_scaled': 'prfh_i_p_bz_d_64_scaled', 'PRFW_I_P_BZ_D_64_scaled': 'prfw_i_p_bz_d_64_scaled', 'PRFD_I_P_BZ_D_64_scaled': 'prfd_i_p_bz_d_64_scaled', 'PRFB_I_P_BZ_D_x32_scaled': 'prfb_i_p_bz_d_x32_scaled', 'PRFH_I_P_BZ_D_x32_scaled': 'prfh_i_p_bz_d_x32_scaled', 'PRFW_I_P_BZ_D_x32_scaled': 'prfw_i_p_bz_d_x32_scaled', 'PRFD_I_P_BZ_D_x32_scaled': 'prfd_i_p_bz_d_x32_scaled', 'LD1SH_Z_P_BZ_D_64_scaled': 'ld1sh_z_p_bz_d_64_scaled', 'LDFF1SH_Z_P_BZ_D_64_scaled': 'ldff1sh_z_p_bz_d_64_scaled', 'LD1H_Z_P_BZ_D_64_scaled': 'ld1h_z_p_bz_d_64_scaled', 'LDFF1H_Z_P_BZ_D_64_scaled': 'ldff1h_z_p_bz_d_64_scaled', 'LD1SW_Z_P_BZ_D_64_scaled': 'ld1sw_z_p_bz_d_64_scaled', 'LDFF1SW_Z_P_BZ_D_64_scaled': 'ldff1sw_z_p_bz_d_64_scaled', 'LD1W_Z_P_BZ_D_64_scaled': 'ld1w_z_p_bz_d_64_scaled', 'LDFF1W_Z_P_BZ_D_64_scaled': 'ldff1w_z_p_bz_d_64_scaled', 'LD1D_Z_P_BZ_D_64_scaled': 'ld1d_z_p_bz_d_64_scaled', 'LDFF1D_Z_P_BZ_D_64_scaled': 'ldff1d_z_p_bz_d_64_scaled', 'LD1SH_Z_P_BZ_D_x32_scaled': 'ld1sh_z_p_bz_d_x32_scaled', 'LDFF1SH_Z_P_BZ_D_x32_scaled': 'ldff1sh_z_p_bz_d_x32_scaled', 'LD1H_Z_P_BZ_D_x32_scaled': 'ld1h_z_p_bz_d_x32_scaled', 'LDFF1H_Z_P_BZ_D_x32_scaled': 'ldff1h_z_p_bz_d_x32_scaled', 'LD1SW_Z_P_BZ_D_x32_scaled': 'ld1sw_z_p_bz_d_x32_scaled', 'LDFF1SW_Z_P_BZ_D_x32_scaled': 'ldff1sw_z_p_bz_d_x32_scaled', 'LD1W_Z_P_BZ_D_x32_scaled': 'ld1w_z_p_bz_d_x32_scaled', 'LDFF1W_Z_P_BZ_D_x32_scaled': 'ldff1w_z_p_bz_d_x32_scaled', 'LD1D_Z_P_BZ_D_x32_scaled': 'ld1d_z_p_bz_d_x32_scaled', 'LDFF1D_Z_P_BZ_D_x32_scaled': 'ldff1d_z_p_bz_d_x32_scaled', 'PRFB_I_P_AI_D': 'prfb_i_p_ai_d', 'PRFH_I_P_AI_D': 'prfh_i_p_ai_d', 'PRFW_I_P_AI_D': 'prfw_i_p_ai_d', 'PRFD_I_P_AI_D': 'prfd_i_p_ai_d', 'LD1SB_Z_P_AI_D': 'ld1sb_z_p_ai_d', 'LDFF1SB_Z_P_AI_D': 'ldff1sb_z_p_ai_d', 'LD1B_Z_P_AI_D': 'ld1b_z_p_ai_d', 'LDFF1B_Z_P_AI_D': 'ldff1b_z_p_ai_d', 'LD1SH_Z_P_AI_D': 'ld1sh_z_p_ai_d', 'LDFF1SH_Z_P_AI_D': 'ldff1sh_z_p_ai_d', 'LD1H_Z_P_AI_D': 'ld1h_z_p_ai_d', 'LDFF1H_Z_P_AI_D': 'ldff1h_z_p_ai_d', 'LD1SW_Z_P_AI_D': 'ld1sw_z_p_ai_d', 'LDFF1SW_Z_P_AI_D': 'ldff1sw_z_p_ai_d', 'LD1W_Z_P_AI_D': 'ld1w_z_p_ai_d', 'LDFF1W_Z_P_AI_D': 'ldff1w_z_p_ai_d', 'LD1D_Z_P_AI_D': 'ld1d_z_p_ai_d', 'LDFF1D_Z_P_AI_D': 'ldff1d_z_p_ai_d', 'LD1SB_Z_P_BZ_D_64_unscaled': 'ld1sb_z_p_bz_d_64_unscaled', 'LDFF1SB_Z_P_BZ_D_64_unscaled': 'ldff1sb_z_p_bz_d_64_unscaled', 'LD1B_Z_P_BZ_D_64_unscaled': 'ld1b_z_p_bz_d_64_unscaled', 'LDFF1B_Z_P_BZ_D_64_unscaled': 'ldff1b_z_p_bz_d_64_unscaled', 'LD1SH_Z_P_BZ_D_64_unscaled': 'ld1sh_z_p_bz_d_64_unscaled', 'LDFF1SH_Z_P_BZ_D_64_unscaled': 'ldff1sh_z_p_bz_d_64_unscaled', 'LD1H_Z_P_BZ_D_64_unscaled': 'ld1h_z_p_bz_d_64_unscaled', 'LDFF1H_Z_P_BZ_D_64_unscaled': 'ldff1h_z_p_bz_d_64_unscaled', 'LD1SW_Z_P_BZ_D_64_unscaled': 'ld1sw_z_p_bz_d_64_unscaled', 'LDFF1SW_Z_P_BZ_D_64_unscaled': 'ldff1sw_z_p_bz_d_64_unscaled', 'LD1W_Z_P_BZ_D_64_unscaled': 'ld1w_z_p_bz_d_64_unscaled', 'LDFF1W_Z_P_BZ_D_64_unscaled': 'ldff1w_z_p_bz_d_64_unscaled', 'LD1D_Z_P_BZ_D_64_unscaled': 'ld1d_z_p_bz_d_64_unscaled', 'LDFF1D_Z_P_BZ_D_64_unscaled': 'ldff1d_z_p_bz_d_64_unscaled', 'LD1SB_Z_P_BZ_D_x32_unscaled': 'ld1sb_z_p_bz_d_x32_unscaled', 'LDFF1SB_Z_P_BZ_D_x32_unscaled': 'ldff1sb_z_p_bz_d_x32_unscaled', 'LD1B_Z_P_BZ_D_x32_unscaled': 'ld1b_z_p_bz_d_x32_unscaled', 'LDFF1B_Z_P_BZ_D_x32_unscaled': 'ldff1b_z_p_bz_d_x32_unscaled', 'LD1SH_Z_P_BZ_D_x32_unscaled': 'ld1sh_z_p_bz_d_x32_unscaled', 'LDFF1SH_Z_P_BZ_D_x32_unscaled': 'ldff1sh_z_p_bz_d_x32_unscaled', 'LD1H_Z_P_BZ_D_x32_unscaled': 'ld1h_z_p_bz_d_x32_unscaled', 'LDFF1H_Z_P_BZ_D_x32_unscaled': 'ldff1h_z_p_bz_d_x32_unscaled', 'LD1SW_Z_P_BZ_D_x32_unscaled': 'ld1sw_z_p_bz_d_x32_unscaled', 'LDFF1SW_Z_P_BZ_D_x32_unscaled': 'ldff1sw_z_p_bz_d_x32_unscaled', 'LD1W_Z_P_BZ_D_x32_unscaled': 'ld1w_z_p_bz_d_x32_unscaled', 'LDFF1W_Z_P_BZ_D_x32_unscaled': 'ldff1w_z_p_bz_d_x32_unscaled', 'LD1D_Z_P_BZ_D_x32_unscaled': 'ld1d_z_p_bz_d_x32_unscaled', 'LDFF1D_Z_P_BZ_D_x32_unscaled': 'ldff1d_z_p_bz_d_x32_unscaled', 'STR_P_BI__': 'str_p_bi_', 'STR_Z_BI__': 'str_z_bi_', 'ST1B_Z_P_BR__': 'st1b_z_p_br_', 'ST1H_Z_P_BR__': 'st1h_z_p_br_', 'ST1W_Z_P_BR__': 'st1w_z_p_br_', 'ST1D_Z_P_BR__': 'st1d_z_p_br_', 'STNT1B_Z_P_BR_Contiguous': 'stnt1b_z_p_br_contiguous', 'STNT1H_Z_P_BR_Contiguous': 'stnt1h_z_p_br_contiguous', 'STNT1W_Z_P_BR_Contiguous': 'stnt1w_z_p_br_contiguous', 'STNT1D_Z_P_BR_Contiguous': 'stnt1d_z_p_br_contiguous', 'ST2B_Z_P_BR_Contiguous': 'st2b_z_p_br_contiguous', 'ST3B_Z_P_BR_Contiguous': 'st3b_z_p_br_contiguous', 'ST4B_Z_P_BR_Contiguous': 'st4b_z_p_br_contiguous', 'ST2H_Z_P_BR_Contiguous': 'st2h_z_p_br_contiguous', 'ST3H_Z_P_BR_Contiguous': 'st3h_z_p_br_contiguous', 'ST4H_Z_P_BR_Contiguous': 'st4h_z_p_br_contiguous', 'ST2W_Z_P_BR_Contiguous': 'st2w_z_p_br_contiguous', 'ST3W_Z_P_BR_Contiguous': 'st3w_z_p_br_contiguous', 'ST4W_Z_P_BR_Contiguous': 'st4w_z_p_br_contiguous', 'ST2D_Z_P_BR_Contiguous': 'st2d_z_p_br_contiguous', 'ST3D_Z_P_BR_Contiguous': 'st3d_z_p_br_contiguous', 'ST4D_Z_P_BR_Contiguous': 'st4d_z_p_br_contiguous', 'ST1B_Z_P_BZ_D_x32_unscaled': 'st1b_z_p_bz_d_x32_unscaled', 'ST1H_Z_P_BZ_D_x32_unscaled': 'st1h_z_p_bz_d_x32_unscaled', 'ST1W_Z_P_BZ_D_x32_unscaled': 'st1w_z_p_bz_d_x32_unscaled', 'ST1D_Z_P_BZ_D_x32_unscaled': 'st1d_z_p_bz_d_x32_unscaled', 'ST1H_Z_P_BZ_D_x32_scaled': 'st1h_z_p_bz_d_x32_scaled', 'ST1W_Z_P_BZ_D_x32_scaled': 'st1w_z_p_bz_d_x32_scaled', 'ST1D_Z_P_BZ_D_x32_scaled': 'st1d_z_p_bz_d_x32_scaled', 'ST1B_Z_P_BZ_S_x32_unscaled': 'st1b_z_p_bz_s_x32_unscaled', 'ST1H_Z_P_BZ_S_x32_unscaled': 'st1h_z_p_bz_s_x32_unscaled', 'ST1W_Z_P_BZ_S_x32_unscaled': 'st1w_z_p_bz_s_x32_unscaled', 'ST1H_Z_P_BZ_S_x32_scaled': 'st1h_z_p_bz_s_x32_scaled', 'ST1W_Z_P_BZ_S_x32_scaled': 'st1w_z_p_bz_s_x32_scaled', 'ST1B_Z_P_BZ_D_64_unscaled': 'st1b_z_p_bz_d_64_unscaled', 'ST1H_Z_P_BZ_D_64_unscaled': 'st1h_z_p_bz_d_64_unscaled', 'ST1W_Z_P_BZ_D_64_unscaled': 'st1w_z_p_bz_d_64_unscaled', 'ST1D_Z_P_BZ_D_64_unscaled': 'st1d_z_p_bz_d_64_unscaled', 'ST1H_Z_P_BZ_D_64_scaled': 'st1h_z_p_bz_d_64_scaled', 'ST1W_Z_P_BZ_D_64_scaled': 'st1w_z_p_bz_d_64_scaled', 'ST1D_Z_P_BZ_D_64_scaled': 'st1d_z_p_bz_d_64_scaled', 'ST1B_Z_P_AI_D': 'st1b_z_p_ai_d', 'ST1H_Z_P_AI_D': 'st1h_z_p_ai_d', 'ST1W_Z_P_AI_D': 'st1w_z_p_ai_d', 'ST1D_Z_P_AI_D': 'st1d_z_p_ai_d', 'ST1B_Z_P_AI_S': 'st1b_z_p_ai_s', 'ST1H_Z_P_AI_S': 'st1h_z_p_ai_s', 'ST1W_Z_P_AI_S': 'st1w_z_p_ai_s', 'STNT1B_Z_P_BI_Contiguous': 'stnt1b_z_p_bi_contiguous', 'STNT1H_Z_P_BI_Contiguous': 'stnt1h_z_p_bi_contiguous', 'STNT1W_Z_P_BI_Contiguous': 'stnt1w_z_p_bi_contiguous', 'STNT1D_Z_P_BI_Contiguous': 'stnt1d_z_p_bi_contiguous', 'ST2B_Z_P_BI_Contiguous': 'st2b_z_p_bi_contiguous', 'ST3B_Z_P_BI_Contiguous': 'st3b_z_p_bi_contiguous', 'ST4B_Z_P_BI_Contiguous': 'st4b_z_p_bi_contiguous', 'ST2H_Z_P_BI_Contiguous': 'st2h_z_p_bi_contiguous', 'ST3H_Z_P_BI_Contiguous': 'st3h_z_p_bi_contiguous', 'ST4H_Z_P_BI_Contiguous': 'st4h_z_p_bi_contiguous', 'ST2W_Z_P_BI_Contiguous': 'st2w_z_p_bi_contiguous', 'ST3W_Z_P_BI_Contiguous': 'st3w_z_p_bi_contiguous', 'ST4W_Z_P_BI_Contiguous': 'st4w_z_p_bi_contiguous', 'ST2D_Z_P_BI_Contiguous': 'st2d_z_p_bi_contiguous', 'ST3D_Z_P_BI_Contiguous': 'st3d_z_p_bi_contiguous', 'ST4D_Z_P_BI_Contiguous': 'st4d_z_p_bi_contiguous', 'ST1B_Z_P_BI__': 'st1b_z_p_bi_', 'ST1H_Z_P_BI__': 'st1h_z_p_bi_', 'ST1W_Z_P_BI__': 'st1w_z_p_bi_', 'ST1D_Z_P_BI__': 'st1d_z_p_bi_', 'aarch64_integer_arithmetic_address_pc_rel': 'ADRP_only_pcreladdr', 'aarch64_integer_arithmetic_add_sub_immediate': 'SUBS_64S_addsub_imm', 'aarch64_integer_tags_mcaddtag': 'ADDG_64_addsub_immtags', 'aarch64_integer_tags_mcsubtag': 'SUBG_64_addsub_immtags', 'aarch64_integer_logical_immediate': 'ANDS_64S_log_imm', 'aarch64_integer_ins_ext_insert_movewide': 'MOVK_64_movewide', 'aarch64_integer_bitfield': 'UBFM_64M_bitfield', 'aarch64_integer_ins_ext_extract_immediate': 'EXTR_64_extract', 'aarch64_branch_conditional_cond': 'B_only_condbranch', 'aarch64_system_exceptions_runtime_svc': 'SVC_EX_exception', 'aarch64_system_exceptions_runtime_hvc': 'HVC_EX_exception', 'aarch64_system_exceptions_runtime_smc': 'SMC_EX_exception', 'aarch64_system_exceptions_debug_breakpoint': 'BRK_EX_exception', 'aarch64_system_exceptions_debug_halt': 'HLT_EX_exception', 'aarch64_system_exceptions_debug_exception': 'DCPS3_DC_exception', 'aarch64_system_hints': 'BTI_HB_hints', 'aarch64_integer_pac_strip_hint': 'XPACLRI_HI_hints', 'aarch64_integer_pac_pacia_hint': 'PACIASP_HI_hints', 'aarch64_integer_pac_pacib_hint': 'PACIBSP_HI_hints', 'aarch64_integer_pac_autia_hint': 'AUTIASP_HI_hints', 'aarch64_integer_pac_autib_hint': 'AUTIBSP_HI_hints', 'aarch64_system_monitors': 'CLREX_BN_barriers', 'aarch64_system_barriers_dmb': 'DMB_BO_barriers', 'aarch64_system_barriers_isb': 'ISB_BI_barriers', 'aarch64_system_barriers_sb': 'SB_only_barriers', 'aarch64_system_barriers_dsb': 'DSB_BO_barriers', 'aarch64_system_barriers_ssbb': 'SSBB_only_barriers', 'aarch64_system_barriers_pssbb': 'PSSBB_only_barriers', 'aarch64_system_register_cpsr': 'MSR_SI_pstate', 'aarch64_integer_flags_cfinv': 'CFINV_M_pstate', 'aarch64_integer_flags_xaflag': 'XAFLAG_M_pstate', 'aarch64_integer_flags_axflag': 'AXFLAG_M_pstate', 'aarch64_system_sysops': 'SYSL_RC_systeminstrs', 'aarch64_system_register_system': 'MRS_RS_systemmove', 'aarch64_branch_unconditional_register': 'BLRAB_64P_branch_reg', 'aarch64_branch_unconditional_eret': 'ERETAB_64E_branch_reg', 'aarch64_branch_unconditional_dret': 'DRPS_64E_branch_reg', 'aarch64_branch_unconditional_immediate': 'BL_only_branch_imm', 'aarch64_branch_conditional_compare': 'CBNZ_64_compbranch', 'aarch64_branch_conditional_test': 'TBNZ_only_testbranch', 'aarch64_memory_vector_multiple_no_wb': 'LD1_asisdlse_R2_2v', 'aarch64_memory_vector_multiple_post_inc': 'LD1_asisdlsep_I2_i2', 'aarch64_memory_vector_single_no_wb': 'LD4R_asisdlso_R4', 'aarch64_memory_vector_single_post_inc': 'LD4R_asisdlsop_R4_i', 'aarch64_integer_tags_mcsettagpost': 'STG_64Spost_ldsttags', 'aarch64_integer_tags_mcsettag': 'STG_64Soffset_ldsttags', 'aarch64_integer_tags_mcsettagpre': 'STG_64Spre_ldsttags', 'aarch64_integer_tags_mcsettagandzeroarray': 'STZGM_64bulk_ldsttags', 'aarch64_integer_tags_mcgettag': 'LDG_64Loffset_ldsttags', 'aarch64_integer_tags_mcsettagandzerodatapost': 'STZG_64Spost_ldsttags', 'aarch64_integer_tags_mcsettagandzerodata': 'STZG_64Soffset_ldsttags', 'aarch64_integer_tags_mcsettagandzerodatapre': 'STZG_64Spre_ldsttags', 'aarch64_integer_tags_mcsettagpairpost': 'ST2G_64Spost_ldsttags', 'aarch64_integer_tags_mcsettagpair': 'ST2G_64Soffset_ldsttags', 'aarch64_integer_tags_mcsettagpairpre': 'ST2G_64Spre_ldsttags', 'aarch64_integer_tags_mcsettagarray': 'STGM_64bulk_ldsttags', 'aarch64_integer_tags_mcsettagpairandzerodatapost': 'STZ2G_64Spost_ldsttags', 'aarch64_integer_tags_mcsettagpairandzerodata': 'STZ2G_64Soffset_ldsttags', 'aarch64_integer_tags_mcsettagpairandzerodatapre': 'STZ2G_64Spre_ldsttags', 'aarch64_integer_tags_mcgettagarray': 'LDGM_64bulk_ldsttags', 'aarch64_memory_exclusive_single': 'LDAXR_LR64_ldstexcl', 'aarch64_memory_atomicops_cas_pair': 'CASPAL_CP64_ldstexcl', 'aarch64_memory_ordered': 'LDAR_LR64_ldstexcl', 'aarch64_memory_atomicops_cas_single': 'CASAL_C64_ldstexcl', 'aarch64_memory_exclusive_pair': 'LDAXP_LP64_ldstexcl', 'aarch64_memory_single_general_immediate_signed_offset_lda_stl': 'LDAPUR_64_ldapstl_unscaled', 'aarch64_memory_literal_general': 'PRFM_P_loadlit', 'aarch64_memory_literal_simdfp': 'LDR_Q_loadlit', 'aarch64_memory_pair_general_no_alloc': 'LDNP_64_ldstnapair_offs', 'aarch64_memory_pair_simdfp_no_alloc': 'LDNP_Q_ldstnapair_offs', 'aarch64_memory_pair_general_post_idx': 'LDP_64_ldstpair_post', 'aarch64_memory_pair_simdfp_post_idx': 'LDP_Q_ldstpair_post', 'aarch64_integer_tags_mcsettaganddatapairpost': 'STGP_64_ldstpair_post', 'aarch64_memory_pair_general_offset': 'LDP_64_ldstpair_off', 'aarch64_memory_pair_simdfp_offset': 'LDP_Q_ldstpair_off', 'aarch64_integer_tags_mcsettaganddatapair': 'STGP_64_ldstpair_off', 'aarch64_memory_pair_general_pre_idx': 'LDP_64_ldstpair_pre', 'aarch64_memory_pair_simdfp_pre_idx': 'LDP_Q_ldstpair_pre', 'aarch64_integer_tags_mcsettaganddatapairpre': 'STGP_64_ldstpair_pre', 'aarch64_memory_single_general_immediate_signed_offset_normal': 'PRFUM_P_ldst_unscaled', 'aarch64_memory_single_simdfp_immediate_signed_offset_normal': 'LDUR_D_ldst_unscaled', 'aarch64_memory_single_general_immediate_signed_post_idx': 'LDR_64_ldst_immpost', 'aarch64_memory_single_simdfp_immediate_signed_post_idx': 'LDR_D_ldst_immpost', 'aarch64_memory_single_general_immediate_signed_offset_unpriv': 'LDTR_64_ldst_unpriv', 'aarch64_memory_single_general_immediate_signed_pre_idx': 'LDR_64_ldst_immpre', 'aarch64_memory_single_simdfp_immediate_signed_pre_idx': 'LDR_D_ldst_immpre', 'aarch64_memory_atomicops_ld': 'LDUMINAL_64_memop', 'aarch64_memory_atomicops_swp': 'SWPAL_64_memop', 'aarch64_memory_ordered_rcpc': 'LDAPR_64L_memop', 'aarch64_memory_single_general_register': 'PRFM_P_ldst_regoff', 'aarch64_memory_single_simdfp_register': 'LDR_D_ldst_regoff', 'aarch64_memory_single_general_immediate_signed_pac': 'LDRAB_64W_ldst_pac', 'aarch64_memory_single_general_immediate_unsigned': 'PRFM_P_ldst_pos', 'aarch64_memory_single_simdfp_immediate_unsigned': 'LDR_D_ldst_pos', 'aarch64_integer_arithmetic_div': 'SDIV_64_dp_2src', 'aarch64_integer_shift_variable': 'RORV_64_dp_2src', 'aarch64_integer_crc': 'CRC32CX_64C_dp_2src', 'aarch64_integer_arithmetic_pointer_mcsubtracttaggedaddress': 'SUBP_64S_dp_2src', 'aarch64_integer_tags_mcinsertrandomtag': 'IRG_64I_dp_2src', 'aarch64_integer_tags_mcinserttagmask': 'GMI_64G_dp_2src', 'aarch64_integer_pac_pacga_dp_2src': 'PACGA_64P_dp_2src', 'aarch64_integer_arithmetic_pointer_mcsubtracttaggedaddresssetflags': 'SUBPS_64S_dp_2src', 'aarch64_integer_arithmetic_rbit': 'RBIT_64_dp_1src', 'aarch64_integer_arithmetic_rev': 'REV_64_dp_1src', 'aarch64_integer_arithmetic_cnt': 'CLS_64_dp_1src', 'aarch64_integer_pac_pacia_dp_1src': 'PACIZA_64Z_dp_1src', 'aarch64_integer_pac_pacib_dp_1src': 'PACIZB_64Z_dp_1src', 'aarch64_integer_pac_pacda_dp_1src': 'PACDZA_64Z_dp_1src', 'aarch64_integer_pac_pacdb_dp_1src': 'PACDZB_64Z_dp_1src', 'aarch64_integer_pac_autia_dp_1src': 'AUTIZA_64Z_dp_1src', 'aarch64_integer_pac_autib_dp_1src': 'AUTIZB_64Z_dp_1src', 'aarch64_integer_pac_autda_dp_1src': 'AUTDZA_64Z_dp_1src', 'aarch64_integer_pac_autdb_dp_1src': 'AUTDZB_64Z_dp_1src', 'aarch64_integer_pac_strip_dp_1src': 'XPACD_64Z_dp_1src', 'aarch64_integer_logical_shiftedreg': 'BICS_64_log_shift', 'aarch64_integer_arithmetic_add_sub_shiftedreg': 'SUBS_64_addsub_shift', 'aarch64_integer_arithmetic_add_sub_extendedreg': 'SUBS_64S_addsub_ext', 'aarch64_integer_arithmetic_add_sub_carry': 'SBCS_64_addsub_carry', 'aarch64_integer_flags_rmif': 'RMIF_only_rmif', 'aarch64_integer_flags_setf': 'SETF16_only_setf', 'aarch64_integer_conditional_compare_register': 'CCMP_64_condcmp_reg', 'aarch64_integer_conditional_compare_immediate': 'CCMP_64_condcmp_imm', 'aarch64_integer_conditional_select': 'CSNEG_64_condsel', 'aarch64_integer_arithmetic_mul_uniform_add_sub': 'MSUB_64A_dp_3src', 'aarch64_integer_arithmetic_mul_widening_32_64': 'UMSUBL_64WA_dp_3src', 'aarch64_integer_arithmetic_mul_widening_64_128hi': 'UMULH_64_dp_3src', 'aarch64_vector_crypto_aes_round': 'AESD_B_cryptoaes', 'aarch64_vector_crypto_aes_mix': 'AESIMC_B_cryptoaes', 'aarch64_vector_crypto_sha3op_sha1_hash_choose': 'SHA1C_QSV_cryptosha3', 'aarch64_vector_crypto_sha3op_sha1_hash_parity': 'SHA1P_QSV_cryptosha3', 'aarch64_vector_crypto_sha3op_sha1_hash_majority': 'SHA1M_QSV_cryptosha3', 'aarch64_vector_crypto_sha3op_sha1_sched0': 'SHA1SU0_VVV_cryptosha3', 'aarch64_vector_crypto_sha3op_sha256_hash': 'SHA256H2_QQV_cryptosha3', 'aarch64_vector_crypto_sha3op_sha256_sched1': 'SHA256SU1_VVV_cryptosha3', 'aarch64_vector_crypto_sha2op_sha1_hash': 'SHA1H_SS_cryptosha2', 'aarch64_vector_crypto_sha2op_sha1_sched1': 'SHA1SU1_VV_cryptosha2', 'aarch64_vector_crypto_sha2op_sha256_sched0': 'SHA256SU0_VV_cryptosha2', 'aarch64_vector_transfer_vector_cpy_dup_sisd': 'DUP_asisdone_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp16_extended_sisd': 'FMULX_asisdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_fp16_sisd': 'FACGT_asisdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_recps_fp16_sisd': 'FRECPS_asisdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_rsqrts_fp16_sisd': 'FRSQRTS_asisdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_sub_fp16_sisd': 'FABD_asisdsamefp16_only', 'aarch64_vector_arithmetic_unary_fp16_conv_float_bulk_sisd': 'FCVTZU_asisdmiscfp16_R', 'aarch64_vector_arithmetic_unary_fp16_conv_float_tieaway_sisd': 'FCVTAU_asisdmiscfp16_R', 'aarch64_vector_arithmetic_unary_fp16_conv_int_sisd': 'UCVTF_asisdmiscfp16_R', 'aarch64_vector_arithmetic_unary_cmp_fp16_bulk_sisd': 'FCMLE_asisdmiscfp16_FZ', 'aarch64_vector_arithmetic_unary_cmp_fp16_lessthan_sisd': 'FCMLT_asisdmiscfp16_FZ', 'aarch64_vector_arithmetic_unary_special_recip_fp16_sisd': 'FRECPE_asisdmiscfp16_R', 'aarch64_vector_arithmetic_unary_special_frecpx_fp16': 'FRECPX_asisdmiscfp16_R', 'aarch64_vector_arithmetic_unary_special_sqrt_est_fp16_sisd': 'FRSQRTE_asisdmiscfp16_R', 'aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_accum_sisd': 'SQRDMLSH_asisdsame2_only', 'aarch64_vector_arithmetic_unary_add_saturating_sisd': 'USQADD_asisdmisc_R', 'aarch64_vector_arithmetic_unary_diff_neg_sat_sisd': 'SQNEG_asisdmisc_R', 'aarch64_vector_arithmetic_unary_cmp_int_bulk_sisd': 'CMLE_asisdmisc_Z', 'aarch64_vector_arithmetic_unary_cmp_int_lessthan_sisd': 'CMLT_asisdmisc_Z', 'aarch64_vector_arithmetic_unary_diff_neg_int_sisd': 'NEG_asisdmisc_R', 'aarch64_vector_arithmetic_unary_extract_sat_sisd': 'UQXTN_asisdmisc_N', 'aarch64_vector_arithmetic_unary_float_conv_float_bulk_sisd': 'FCVTZU_asisdmisc_R', 'aarch64_vector_arithmetic_unary_float_conv_float_tieaway_sisd': 'FCVTAU_asisdmisc_R', 'aarch64_vector_arithmetic_unary_float_conv_int_sisd': 'UCVTF_asisdmisc_R', 'aarch64_vector_arithmetic_unary_cmp_float_bulk_sisd': 'FCMLE_asisdmisc_FZ', 'aarch64_vector_arithmetic_unary_cmp_float_lessthan_sisd': 'FCMLT_asisdmisc_FZ', 'aarch64_vector_arithmetic_unary_special_recip_float_sisd': 'FRECPE_asisdmisc_R', 'aarch64_vector_arithmetic_unary_special_frecpx': 'FRECPX_asisdmisc_R', 'aarch64_vector_arithmetic_unary_extract_sqxtun_sisd': 'SQXTUN_asisdmisc_N', 'aarch64_vector_arithmetic_unary_float_xtn_sisd': 'FCVTXN_asisdmisc_N', 'aarch64_vector_arithmetic_unary_special_sqrt_est_float_sisd': 'FRSQRTE_asisdmisc_R', 'aarch64_vector_reduce_add_sisd': 'ADDP_asisdpair_only', 'aarch64_vector_reduce_fp16_maxnm_sisd': 'FMINNMP_asisdpair_only_H', 'aarch64_vector_reduce_fp16_add_sisd': 'FADDP_asisdpair_only_H', 'aarch64_vector_reduce_fp16_max_sisd': 'FMINP_asisdpair_only_H', 'aarch64_vector_reduce_fp_maxnm_sisd': 'FMINNMP_asisdpair_only_SD', 'aarch64_vector_reduce_fp_add_sisd': 'FADDP_asisdpair_only_SD', 'aarch64_vector_reduce_fp_max_sisd': 'FMINP_asisdpair_only_SD', 'aarch64_vector_arithmetic_binary_disparate_mul_dmacc_sisd': 'SQDMLSL_asisddiff_only', 'aarch64_vector_arithmetic_binary_disparate_mul_double_sisd': 'SQDMULL_asisddiff_only', 'aarch64_vector_arithmetic_binary_uniform_add_saturating_sisd': 'UQADD_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_sub_saturating_sisd': 'UQSUB_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_int_sisd': 'CMHS_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_shift_sisd': 'UQRSHL_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_sisd': 'SUB_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_sisd': 'CMEQ_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_sisd': 'SQRDMULH_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_extended_sisd': 'FMULX_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_fp_sisd': 'FACGT_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_recps_sisd': 'FRECPS_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_rsqrts_sisd': 'FRSQRTS_asisdsame_only', 'aarch64_vector_arithmetic_binary_uniform_sub_fp_sisd': 'FABD_asisdsame_only', 'aarch64_vector_shift_right_sisd': 'URSRA_asisdshf_R', 'aarch64_vector_shift_left_sisd': 'SHL_asisdshf_R', 'aarch64_vector_shift_left_sat_sisd': 'UQSHL_asisdshf_R', 'aarch64_vector_shift_right_narrow_uniform_sisd': 'UQRSHRN_asisdshf_N', 'aarch64_vector_shift_conv_int_sisd': 'UCVTF_asisdshf_C', 'aarch64_vector_shift_conv_float_sisd': 'FCVTZU_asisdshf_C', 'aarch64_vector_shift_right_insert_sisd': 'SRI_asisdshf_R', 'aarch64_vector_shift_left_insert_sisd': 'SLI_asisdshf_R', 'aarch64_vector_shift_right_narrow_nonuniform_sisd': 'SQRSHRUN_asisdshf_N', 'aarch64_vector_arithmetic_binary_element_mul_acc_double_sisd': 'SQDMLSL_asisdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_double_sisd': 'SQDMULL_asisdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_high_sisd': 'SQRDMULH_asisdelem_R', 'aarch64_vector_arithmetic_binary_element_mul_acc_fp16_sisd': 'FMLS_asisdelem_RH_H', 'aarch64_vector_arithmetic_binary_element_mul_fp16_sisd': 'FMULX_asisdelem_RH_H', 'aarch64_vector_arithmetic_binary_element_mul_acc_fp_sisd': 'FMLS_asisdelem_R_SD', 'aarch64_vector_arithmetic_binary_element_mul_fp_sisd': 'FMULX_asisdelem_R_SD', 'aarch64_vector_arithmetic_binary_element_mul_acc_high_sisd': 'SQRDMLSH_asisdelem_R', 'aarch64_vector_transfer_vector_table': 'TBX_asimdtbl_L4_4', 'aarch64_vector_transfer_vector_permute_unzip': 'UZP2_asimdperm_only', 'aarch64_vector_transfer_vector_permute_transpose': 'TRN2_asimdperm_only', 'aarch64_vector_transfer_vector_permute_zip': 'ZIP2_asimdperm_only', 'aarch64_vector_transfer_vector_extract': 'EXT_asimdext_only', 'aarch64_vector_transfer_vector_cpy_dup_simd': 'DUP_asimdins_DV_v', 'aarch64_vector_transfer_integer_dup': 'DUP_asimdins_DR_r', 'aarch64_vector_transfer_integer_move_signed': 'SMOV_asimdins_X_x', 'aarch64_vector_transfer_integer_move_unsigned': 'UMOV_asimdins_X_x', 'aarch64_vector_transfer_integer_insert': 'INS_asimdins_IR_r', 'aarch64_vector_transfer_vector_insert': 'INS_asimdins_IV_v', 'aarch64_vector_arithmetic_binary_uniform_max_min_fp16_2008': 'FMINNMP_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp16_fused': 'FMLS_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_add_fp16': 'FADDP_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp16_extended_simd': 'FMULX_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_fp16_simd': 'FACGT_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_max_min_fp16_1985': 'FMINP_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_recps_fp16_simd': 'FRECPS_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_sub_fp16_simd': 'FABD_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_rsqrts_fp16_simd': 'FRSQRTS_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp16_product': 'FMUL_asimdsamefp16_only', 'aarch64_vector_arithmetic_binary_uniform_div_fp16': 'FDIV_asimdsamefp16_only', 'aarch64_vector_arithmetic_unary_fp16_round': 'FRINTI_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_fp16_conv_float_bulk_simd': 'FCVTZU_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_fp16_conv_float_tieaway_simd': 'FCVTAU_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_fp16_conv_int_simd': 'UCVTF_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_cmp_fp16_bulk_simd': 'FCMLE_asimdmiscfp16_FZ', 'aarch64_vector_arithmetic_unary_cmp_fp16_lessthan_simd': 'FCMLT_asimdmiscfp16_FZ', 'aarch64_vector_arithmetic_unary_diff_neg_fp16': 'FNEG_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_special_recip_fp16_simd': 'FRECPE_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_special_sqrt_est_fp16_simd': 'FRSQRTE_asimdmiscfp16_R', 'aarch64_vector_arithmetic_unary_special_sqrt_fp16': 'FSQRT_asimdmiscfp16_R', 'aarch64_vector_arithmetic_binary_uniform_mul_int_dotp': 'UDOT_asimdsame2_D', 'aarch64_vector_arithmetic_binary_uniform_mat_mul_int_usdot': 'USDOT_asimdsame2_D', 'aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_accum_simd': 'SQRDMLSH_asimdsame2_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_complex': 'FCMLA_asimdsame2_C', 'aarch64_vector_arithmetic_binary_uniform_add_fp_complex': 'FCADD_asimdsame2_C', 'aarch64_vector_arithmetic_binary_uniform_mul_int_bfdot': 'BFDOT_asimdsame2_D', 'aarch64_vector_arithmetic_binary_uniform_mul_acc_bf16_long': 'BFMLAL_asimdsame2_F_', 'aarch64_vector_arithmetic_binary_uniform_mat_mul_int_mla': 'UMMLA_asimdsame2_G', 'aarch64_vector_bfmmla': 'BFMMLA_asimdsame2_E', 'aarch64_vector_arithmetic_unary_rev': 'REV32_asimdmisc_R', 'aarch64_vector_arithmetic_unary_add_pairwise': 'UADALP_asimdmisc_P', 'aarch64_vector_arithmetic_unary_add_saturating_simd': 'USQADD_asimdmisc_R', 'aarch64_vector_arithmetic_unary_clsz': 'CLZ_asimdmisc_R', 'aarch64_vector_arithmetic_unary_cnt': 'CNT_asimdmisc_R', 'aarch64_vector_arithmetic_unary_diff_neg_sat_simd': 'SQNEG_asimdmisc_R', 'aarch64_vector_arithmetic_unary_cmp_int_bulk_simd': 'CMLE_asimdmisc_Z', 'aarch64_vector_arithmetic_unary_cmp_int_lessthan_simd': 'CMLT_asimdmisc_Z', 'aarch64_vector_arithmetic_unary_diff_neg_int_simd': 'NEG_asimdmisc_R', 'aarch64_vector_arithmetic_unary_extract_nosat': 'XTN_asimdmisc_N', 'aarch64_vector_arithmetic_unary_extract_sat_simd': 'UQXTN_asimdmisc_N', 'aarch64_vector_arithmetic_unary_float_narrow': 'FCVTN_asimdmisc_N', 'aarch64_vector_arithmetic_unary_float_widen': 'FCVTL_asimdmisc_L', 'aarch64_vector_arithmetic_unary_float_round': 'FRINTI_asimdmisc_R', 'aarch64_vector_arithmetic_unary_float_conv_float_bulk_simd': 'FCVTZU_asimdmisc_R', 'aarch64_vector_arithmetic_unary_float_conv_float_tieaway_simd': 'FCVTAU_asimdmisc_R', 'aarch64_vector_arithmetic_unary_float_conv_int_simd': 'UCVTF_asimdmisc_R', 'aarch64_vector_arithmetic_unary_float_round_frint_32_64': 'FRINT64X_asimdmisc_R', 'aarch64_vector_arithmetic_unary_cmp_float_bulk_simd': 'FCMLE_asimdmisc_FZ', 'aarch64_vector_arithmetic_unary_cmp_float_lessthan_simd': 'FCMLT_asimdmisc_FZ', 'aarch64_vector_arithmetic_unary_diff_neg_float': 'FNEG_asimdmisc_R', 'aarch64_vector_arithmetic_unary_special_recip_int': 'URECPE_asimdmisc_R', 'aarch64_vector_arithmetic_unary_special_recip_float_simd': 'FRECPE_asimdmisc_R', 'aarch64_vector_cvt_bf16_vector': 'BFCVTN_asimdmisc_4S', 'aarch64_vector_arithmetic_unary_extract_sqxtun_simd': 'SQXTUN_asimdmisc_N', 'aarch64_vector_arithmetic_unary_shift': 'SHLL_asimdmisc_S', 'aarch64_vector_arithmetic_unary_float_xtn_simd': 'FCVTXN_asimdmisc_N', 'aarch64_vector_arithmetic_unary_not': 'NOT_asimdmisc_R', 'aarch64_vector_arithmetic_unary_rbit': 'RBIT_asimdmisc_R', 'aarch64_vector_arithmetic_unary_special_sqrt_est_int': 'URSQRTE_asimdmisc_R', 'aarch64_vector_arithmetic_unary_special_sqrt_est_float_simd': 'FRSQRTE_asimdmisc_R', 'aarch64_vector_arithmetic_unary_special_sqrt': 'FSQRT_asimdmisc_R', 'aarch64_vector_reduce_add_long': 'UADDLV_asimdall_only', 'aarch64_vector_reduce_int_max': 'UMINV_asimdall_only', 'aarch64_vector_reduce_add_simd': 'ADDV_asimdall_only', 'aarch64_vector_reduce_fp16_maxnm_simd': 'FMINNMV_asimdall_only_H', 'aarch64_vector_reduce_fp16_max_simd': 'FMINV_asimdall_only_H', 'aarch64_vector_reduce_fp_maxnm_simd': 'FMINNMV_asimdall_only_SD', 'aarch64_vector_reduce_fp_max_simd': 'FMINV_asimdall_only_SD', 'aarch64_vector_arithmetic_binary_disparate_add_sub_long': 'USUBL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_add_sub_wide': 'USUBW_asimddiff_W', 'aarch64_vector_arithmetic_binary_disparate_add_sub_narrow': 'RSUBHN_asimddiff_N', 'aarch64_vector_arithmetic_binary_disparate_diff': 'UABDL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_mul_accum': 'UMLSL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_mul_dmacc_simd': 'SQDMLSL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_mul_product': 'UMULL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_mul_double_simd': 'SQDMULL_asimddiff_L', 'aarch64_vector_arithmetic_binary_disparate_mul_poly': 'PMULL_asimddiff_L', 'aarch64_vector_arithmetic_binary_uniform_add_halving_truncating': 'UHADD_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_saturating_simd': 'UQADD_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_halving_rounding': 'URHADD_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_sub_int': 'UHSUB_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_sub_saturating_simd': 'UQSUB_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_int_simd': 'CMHS_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_shift_simd': 'UQRSHL_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_max_min_single': 'UMIN_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_diff': 'UABA_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_wrapping_single_simd': 'SUB_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_bitwise_simd': 'CMEQ_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_int_accum': 'MLS_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_int_product': 'PMUL_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_max_min_pair': 'UMINP_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_int_doubling_simd': 'SQRDMULH_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_wrapping_pair': 'ADDP_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_max_min_fp_2008': 'FMINNMP_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_fused': 'FMLS_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_add_fp': 'FADDP_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_extended_simd': 'FMULX_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_cmp_fp_simd': 'FACGT_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_max_min_fp_1985': 'FMINP_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_recps_simd': 'FRECPS_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_logical_and_orr': 'ORN_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_mul_norounding_lower': 'FMLSL_asimdsame_F', 'aarch64_vector_arithmetic_binary_uniform_sub_fp_simd': 'FABD_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_rsqrts_simd': 'FRSQRTS_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_product': 'FMUL_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_div': 'FDIV_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_logical_bsl_eor': 'BIF_asimdsame_only', 'aarch64_vector_arithmetic_binary_uniform_mul_fp_mul_norounding_upper': 'FMLSL2_asimdsame_F', 'aarch64_vector_logical': 'FMOV_asimdimm_D2_d', 'aarch64_vector_fp16_movi': 'FMOV_asimdimm_H_h', 'aarch64_vector_shift_right_simd': 'URSRA_asimdshf_R', 'aarch64_vector_shift_left_simd': 'SHL_asimdshf_R', 'aarch64_vector_shift_left_sat_simd': 'UQSHL_asimdshf_R', 'aarch64_vector_shift_right_narrow_logical': 'RSHRN_asimdshf_N', 'aarch64_vector_shift_right_narrow_uniform_simd': 'UQRSHRN_asimdshf_N', 'aarch64_vector_shift_left_long': 'USHLL_asimdshf_L', 'aarch64_vector_shift_conv_int_simd': 'UCVTF_asimdshf_C', 'aarch64_vector_shift_conv_float_simd': 'FCVTZU_asimdshf_C', 'aarch64_vector_shift_right_insert_simd': 'SRI_asimdshf_R', 'aarch64_vector_shift_left_insert_simd': 'SLI_asimdshf_R', 'aarch64_vector_shift_right_narrow_nonuniform_simd': 'SQRSHRUN_asimdshf_N', 'aarch64_vector_arithmetic_binary_element_mul_acc_long': 'UMLSL_asimdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_acc_double_simd': 'SQDMLSL_asimdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_int': 'MUL_asimdelem_R', 'aarch64_vector_arithmetic_binary_element_mul_long': 'UMULL_asimdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_double_simd': 'SQDMULL_asimdelem_L', 'aarch64_vector_arithmetic_binary_element_mul_high_simd': 'SQRDMULH_asimdelem_R', 'aarch64_vector_arithmetic_binary_element_dotp': 'UDOT_asimdelem_D', 'aarch64_vector_arithmetic_binary_element_mul_acc_fp16_simd': 'FMLS_asimdelem_RH_H', 'aarch64_vector_arithmetic_binary_element_mul_fp16_simd': 'FMULX_asimdelem_RH_H', 'aarch64_vector_arithmetic_binary_element_mat_mul_int_dotp': 'USDOT_asimdelem_D', 'aarch64_vector_arithmetic_binary_element_bfdot': 'BFDOT_asimdelem_E', 'aarch64_vector_arithmetic_binary_element_mul_acc_fp_simd': 'FMLS_asimdelem_R_SD', 'aarch64_vector_arithmetic_binary_element_mul_fp_simd': 'FMULX_asimdelem_R_SD', 'aarch64_vector_arithmetic_binary_element_mul_acc_mul_norounding_i_lower': 'FMLSL_asimdelem_LH', 'aarch64_vector_arithmetic_binary_element_mul_acc_bf16_long': 'BFMLAL_asimdelem_F', 'aarch64_vector_arithmetic_binary_element_mul_acc_int': 'MLS_asimdelem_R', 'aarch64_vector_arithmetic_binary_element_mul_acc_high_simd': 'SQRDMLSH_asimdelem_R', 'aarch64_vector_arithmetic_binary_element_mul_acc_complex': 'FCMLA_asimdelem_C_S', 'aarch64_vector_arithmetic_binary_element_mul_acc_mul_norounding_i_upper': 'FMLSL2_asimdelem_LH', 'aarch64_vector_crypto_sm3_sm3tt1a': 'SM3TT1A_VVV4_crypto3_imm2', 'aarch64_vector_crypto_sm3_sm3tt1b': 'SM3TT1B_VVV4_crypto3_imm2', 'aarch64_vector_crypto_sm3_sm3tt2a': 'SM3TT2A_VVV4_crypto3_imm2', 'aarch64_vector_crypto_sm3_sm3tt2b': 'SM3TT2B_VVV_crypto3_imm2', 'aarch64_vector_crypto_sha512_sha512h': 'SHA512H_QQV_cryptosha512_3', 'aarch64_vector_crypto_sha512_sha512h2': 'SHA512H2_QQV_cryptosha512_3', 'aarch64_vector_crypto_sha512_sha512su1': 'SHA512SU1_VVV2_cryptosha512_3', 'aarch64_vector_crypto_sha3_rax1': 'RAX1_VVV2_cryptosha512_3', 'aarch64_vector_crypto_sm3_sm3partw1': 'SM3PARTW1_VVV4_cryptosha512_3', 'aarch64_vector_crypto_sm3_sm3partw2': 'SM3PARTW2_VVV4_cryptosha512_3', 'aarch64_vector_crypto_sm4_sm4enckey': 'SM4EKEY_VVV4_cryptosha512_3', 'aarch64_vector_crypto_sha3_eor3': 'EOR3_VVV16_crypto4', 'aarch64_vector_crypto_sha3_bcax': 'BCAX_VVV16_crypto4', 'aarch64_vector_crypto_sm3_sm3ss1': 'SM3SS1_VVV4_crypto4', 'aarch64_vector_crypto_sha3_xar': 'XAR_VVV2_crypto3_imm6', 'aarch64_vector_crypto_sha512_sha512su0': 'SHA512SU0_VV2_cryptosha512_2', 'aarch64_vector_crypto_sm4_sm4enc': 'SM4E_VV4_cryptosha512_2', 'aarch64_float_convert_fix': 'FCVTZU_64H_float2fix', 'aarch64_float_convert_int': 'FCVTZU_64H_float2int', 'aarch64_float_arithmetic_unary': 'FSQRT_H_floatdp1', 'aarch64_float_convert_fp': 'FCVT_DH_floatdp1', 'aarch64_float_arithmetic_round_frint': 'FRINTI_H_floatdp1', 'aarch64_float_arithmetic_round_frint_32_64': 'FRINT64X_D_floatdp1', 'aarch64_vector_cvt_bf16_scalar': 'BFCVT_BS_floatdp1', 'aarch64_float_compare_uncond': 'FCMPE_HZ_floatcmp', 'aarch64_float_move_fp_imm': 'FMOV_H_floatimm', 'aarch64_float_compare_cond': 'FCCMPE_H_floatccmp', 'aarch64_float_arithmetic_mul_product': 'FNMUL_H_floatdp2', 'aarch64_float_arithmetic_div': 'FDIV_H_floatdp2', 'aarch64_float_arithmetic_add_sub': 'FSUB_H_floatdp2', 'aarch64_float_arithmetic_max_min': 'FMINNM_H_floatdp2', 'aarch64_float_move_fp_select': 'FCSEL_H_floatsel', 'aarch64_float_arithmetic_mul_add_sub': 'FNMSUB_H_floatdp3', 'aarch32_ADD_r_T1_A': 'ADD_r_T1', 'aarch32_SUB_r_T1_A': 'SUB_r_T1', 'aarch32_ADD_i_T1_A': 'ADD_i_T1', 'aarch32_SUB_i_T1_A': 'SUB_i_T1', 'aarch32_MOV_r_T2_A': 'MOV_r_T2', 'aarch32_MOV_i_T1_A': 'MOV_i_T1', 'aarch32_CMP_i_T1_A': 'CMP_i_T1', 'aarch32_ADD_i_T2_A': 'ADD_i_T2', 'aarch32_SUB_i_T2_A': 'SUB_i_T2', 'aarch32_AND_r_T1_A': 'AND_r_T1', 'aarch32_EOR_r_T1_A': 'EOR_r_T1', 'aarch32_MOV_rr_T1_A': 'MOV_rr_T1_ROR', 'aarch32_ADC_r_T1_A': 'ADC_r_T1', 'aarch32_SBC_r_T1_A': 'SBC_r_T1', 'aarch32_TST_r_T1_A': 'TST_r_T1', 'aarch32_RSB_i_T1_A': 'RSB_i_T1', 'aarch32_CMP_r_T1_A': 'CMP_r_T1', 'aarch32_CMN_r_T1_A': 'CMN_r_T1', 'aarch32_ORR_r_T1_A': 'ORR_r_T1', 'aarch32_MUL_T1_A': 'MUL_T1', 'aarch32_BIC_r_T1_A': 'BIC_r_T1', 'aarch32_MVN_r_T1_A': 'MVN_r_T1', 'aarch32_BX_T1_A': 'BX_T1', 'aarch32_BLX_r_T1_A': 'BLX_r_T1', 'aarch32_ADD_r_T2_A': 'ADD_r_T2', 'aarch32_CMP_r_T2_A': 'CMP_r_T2', 'aarch32_MOV_r_T1_A': 'MOV_r_T1', 'aarch32_LDR_l_T1_A': 'LDR_l_T1', 'aarch32_STR_r_T1_A': 'STR_r_T1', 'aarch32_STRH_r_T1_A': 'STRH_r_T1', 'aarch32_STRB_r_T1_A': 'STRB_r_T1', 'aarch32_LDRSB_r_T1_A': 'LDRSB_r_T1', 'aarch32_LDR_r_T1_A': 'LDR_r_T1', 'aarch32_LDRH_r_T1_A': 'LDRH_r_T1', 'aarch32_LDRB_r_T1_A': 'LDRB_r_T1', 'aarch32_LDRSH_r_T1_A': 'LDRSH_r_T1', 'aarch32_STR_i_T1_A': 'STR_i_T1', 'aarch32_LDR_i_T1_A': 'LDR_i_T1', 'aarch32_STRB_i_T1_A': 'STRB_i_T1', 'aarch32_LDRB_i_T1_A': 'LDRB_i_T1', 'aarch32_STRH_i_T1_A': 'STRH_i_T1', 'aarch32_LDRH_i_T1_A': 'LDRH_i_T1', 'aarch32_STR_i_T2_A': 'STR_i_T2', 'aarch32_LDR_i_T2_A': 'LDR_i_T2', 'aarch32_ADR_T1_A': 'ADR_T1', 'aarch32_ADD_SP_i_T1_A': 'ADD_SP_i_T1', 'aarch32_ADD_SP_i_T2_A': 'ADD_SP_i_T2', 'aarch32_SUB_SP_i_T1_A': 'SUB_SP_i_T1', 'aarch32_SXTH_T1_A': 'SXTH_T1', 'aarch32_SXTB_T1_A': 'SXTB_T1', 'aarch32_UXTH_T1_A': 'UXTH_T1', 'aarch32_UXTB_T1_A': 'UXTB_T1', 'aarch32_SETPAN_T1_A': 'SETPAN_T1', 'aarch32_SETEND_T1_A': 'SETEND_T1', 'aarch32_CPS_T1_AS': 'CPSID_T1_AS', 'aarch32_HLT_T1_A': 'HLT_T1', 'aarch32_REV_T1_A': 'REV_T1', 'aarch32_REV16_T1_A': 'REV16_T1', 'aarch32_REVSH_T1_A': 'REVSH_T1', 'aarch32_BKPT_T1_A': 'BKPT_T1', 'aarch32_NOP_T1_A': 'NOP_T1', 'aarch32_YIELD_T1_A': 'YIELD_T1', 'aarch32_WFE_T1_A': 'WFE_T1', 'aarch32_WFI_T1_A': 'WFI_T1', 'aarch32_SEV_T1_A': 'SEV_T1', 'aarch32_SEVL_T1_A': 'SEVL_T1', 'aarch32_IT_T1_A': 'IT_T1', 'aarch32_CBNZ_T1_A': 'CBNZ_T1', 'aarch32_PUSH_T1_A': 'PUSH_T1', 'aarch32_POP_T1_A': 'POP_T1', 'aarch32_STM_T1_A': 'STM_T1', 'aarch32_LDM_T1_A': 'LDM_T1', 'aarch32_UDF_T1_A': 'UDF_T1', 'aarch32_SVC_T1_A': 'SVC_T1', 'aarch32_B_T1_A': 'B_T1', 'aarch32_B_T2_A': 'B_T2', 'aarch32_MCRR_T1A1_A': 'MCRR_A1', 'aarch32_MRRC_T1A1_A': 'MRRC_A1', 'aarch32_LDC_l_T1A1_A': 'LDC_l_A1', 'aarch32_STC_T1A1_A': 'STC_A1_pre', 'aarch32_LDC_i_T1A1_A': 'LDC_i_A1_pre', 'aarch32_VABS_T2_A': 'VABS_T2_D', 'aarch32_VMOV_r_T2A2_A': 'VMOV_r_A2_D', 'aarch32_VNEG_T2_A': 'VNEG_T2_D', 'aarch32_VSQRT_T1_A': 'VSQRT_T1_D', 'aarch32_VCVTB_T1A1_A': 'VCVTT_A1_HD', 'aarch32_VCVTB_bf16_T1A1_A': 'VCVTB_A1_bfs', 'aarch32_VCVTT_T1A1_A': 'VCVTT_A1_bfs', 'aarch32_VRINTZ_vfp_T1_A': 'VRINTZ_vfp_T1_D', 'aarch32_VRINTX_vfp_T1_A': 'VRINTX_vfp_T1_D', 'aarch32_VCVT_ds_T1A1_A': 'VCVT_sd_A1', 'aarch32_VCVT_iv_T1_A': 'VCVT_siv_T1_D', 'aarch32_VJCVT_T1_A': 'VJCVT_T1', 'aarch32_VCVT_xv_T1_A': 'VCVT_xv_T1_D', 'aarch32_VMOV_i_T2_A': 'VMOV_i_T2_D', 'aarch32_VMLA_f_T2_A': 'VMLS_f_T2_D', 'aarch32_VNMLA_T1_A': 'VNMLA_T1_D', 'aarch32_VMUL_f_T2_A': 'VMUL_f_T2_D', 'aarch32_VNMLA_T2_A': 'VNMUL_T1_D', 'aarch32_VADD_f_T2_A': 'VADD_f_T2_D', 'aarch32_VSUB_f_T2_A': 'VSUB_f_T2_D', 'aarch32_VDIV_T1_A': 'VDIV_T1_D', 'aarch32_VFNMA_T1_A': 'VFNMA_T1_D', 'aarch32_VFMA_T2_A': 'VFMS_T2_D', 'aarch32_VSEL_T1_A': 'VSELGT_T1_D', 'aarch32_VMAXNM_T2_A': 'VMINNM_T2_D', 'aarch32_VMOVX_T1_A': 'VMOVX_T1', 'aarch32_VINS_T1_A': 'VINS_T1', 'aarch32_VRINTA_vfp_T1_A': 'VRINTM_vfp_T1_D', 'aarch32_VCVTA_vfp_T1_A': 'VCVTM_vfp_T1_D', 'aarch32_MCR_T1A1_A': 'MCR_A1', 'aarch32_MRC_T1A1_A': 'MRC_A1', 'aarch32_VFMA_T1_A': 'VFMS_T1_Q', 'aarch32_VADD_f_T1_A': 'VADD_f_T1_Q', 'aarch32_VMLA_f_T1_A': 'VMLS_f_T1_Q', 'aarch32_VMAX_f_T1_A': 'VMIN_f_T1_Q', 'aarch32_VRECPS_T1_A': 'VRECPS_T1_Q', 'aarch32_VHADD_T1A1_A': 'VHSUB_A1_Q', 'aarch32_VAND_r_T1A1_A': 'VAND_r_A1_Q', 'aarch32_VQADD_T1A1_A': 'VQADD_A1_Q', 'aarch32_VRHADD_T1A1_A': 'VRHADD_A1_Q', 'aarch32_SHA1C_T1_A': 'SHA1C_T1', 'aarch32_VBIC_r_T1A1_A': 'VBIC_r_A1_Q', 'aarch32_VQSUB_T1A1_A': 'VQSUB_A1_Q', 'aarch32_SHA1P_T1_A': 'SHA1P_T1', 'aarch32_VSUB_f_T1_A': 'VSUB_f_T1_Q', 'aarch32_VRSQRTS_T1_A': 'VRSQRTS_T1_Q', 'aarch32_VSHL_r_T1A1_A': 'VSHL_r_A1_Q', 'aarch32_VADD_i_T1A1_A': 'VADD_i_A1_Q', 'aarch32_VORR_r_T1A1_A': 'VORR_r_A1_Q', 'aarch32_VTST_T1A1_A': 'VTST_A1_Q', 'aarch32_VQSHL_r_T1A1_A': 'VQSHL_r_A1_Q', 'aarch32_VMLA_i_T1A1_A': 'VMLS_i_A1_Q', 'aarch32_VRSHL_T1A1_A': 'VRSHL_A1_Q', 'aarch32_VQRSHL_T1A1_A': 'VQRSHL_A1_Q', 'aarch32_VQDMULH_T1A1_A': 'VQDMULH_A1_Q', 'aarch32_SHA1M_T1_A': 'SHA1M_T1', 'aarch32_VPADD_i_T1A1_A': 'VPADD_i_A1', 'aarch32_VMAX_i_T1A1_A': 'VMIN_i_A1_Q', 'aarch32_VORN_r_T1A1_A': 'VORN_r_A1_Q', 'aarch32_VABD_i_T1A1_A': 'VABD_i_A1_Q', 'aarch32_VABA_T1A1_A': 'VABA_A1_Q', 'aarch32_SHA1SU0_T1_A': 'SHA1SU0_T1', 'aarch32_VPADD_f_T1_A': 'VPADD_f_T1', 'aarch32_VMUL_f_T1_A': 'VMUL_f_T1_Q', 'aarch32_VACGE_T1_A': 'VACGT_T1_Q', 'aarch32_VPMAX_f_T1_A': 'VPMIN_f_T1', 'aarch32_VMAXNM_T1_A': 'VMINNM_T1_Q', 'aarch32_VEOR_T1A1_A': 'VEOR_A1_Q', 'aarch32_VMUL_i_T1A1_A': 'VMUL_i_A1_Q', 'aarch32_SHA256H_T1_A': 'SHA256H_T1', 'aarch32_VPMAX_i_T1A1_A': 'VPMIN_i_A1', 'aarch32_VBIF_T1A1_A': 'VBIF_A1_Q', 'aarch32_SHA256H2_T1_A': 'SHA256H2_T1', 'aarch32_VABD_f_T1_A': 'VABD_f_T1_Q', 'aarch32_VSUB_i_T1A1_A': 'VSUB_i_A1_Q', 'aarch32_VQRDMULH_T1A1_A': 'VQRDMULH_A1_Q', 'aarch32_SHA256SU1_T1_A': 'SHA256SU1_T1', 'aarch32_VQRDMLAH_T1_A': 'VQRDMLAH_T1_Q', 'aarch32_VQRDMLSH_T1_A': 'VQRDMLSH_T1_Q', 'aarch32_VEXT_T1A1_A': 'VEXT_A1_Q', 'aarch32_VREV16_T1A1_A': 'VREV16_A1_Q', 'aarch32_VPADDL_T1A1_A': 'VPADDL_A1_Q', 'aarch32_AESE_T1_A': 'AESE_T1', 'aarch32_AESD_T1_A': 'AESD_T1', 'aarch32_AESMC_T1_A': 'AESMC_T1', 'aarch32_AESIMC_T1_A': 'AESIMC_T1', 'aarch32_VCLS_T1A1_A': 'VCLS_A1_Q', 'aarch32_VSWP_T1A1_A': 'VSWP_A1_Q', 'aarch32_VCLZ_T1A1_A': 'VCLZ_A1_Q', 'aarch32_VCNT_T1A1_A': 'VCNT_A1_Q', 'aarch32_VMVN_r_T1A1_A': 'VMVN_r_A1_Q', 'aarch32_VPADAL_T1A1_A': 'VPADAL_A1_Q', 'aarch32_VQABS_T1A1_A': 'VQABS_A1_Q', 'aarch32_VQNEG_T1A1_A': 'VQNEG_A1_Q', 'aarch32_VCGT_i_T1_A': 'VCGT_i_T1_Q', 'aarch32_VCGE_i_T1_A': 'VCGE_i_T1_Q', 'aarch32_VCEQ_i_T1_A': 'VCEQ_i_T1_Q', 'aarch32_VCLE_i_T1_A': 'VCLE_i_T1_Q', 'aarch32_VCLT_i_T1_A': 'VCLT_i_T1_Q', 'aarch32_VABS_T1_A': 'VABS_T1_Q', 'aarch32_VNEG_T1_A': 'VNEG_T1_Q', 'aarch32_SHA1H_T1_A': 'SHA1H_T1', 'aarch32_VCVT_T1A1_A': 'VCVT_bfs_A1', 'aarch32_VTRN_T1A1_A': 'VTRN_A1_Q', 'aarch32_VUZP_T1A1_A': 'VUZP_A1_Q', 'aarch32_VZIP_T1A1_A': 'VZIP_A1_Q', 'aarch32_VMOVN_T1A1_A': 'VMOVN_A1', 'aarch32_VQMOVN_T1A1_A': 'VQMOVN_A1', 'aarch32_VSHLL_T2A2_A': 'VSHLL_A2', 'aarch32_SHA1SU1_T1_A': 'SHA1SU1_T1', 'aarch32_SHA256SU0_T1_A': 'SHA256SU0_T1', 'aarch32_VRINTA_asimd_T1_A': 'VRINTP_asimd_T1_Q', 'aarch32_VRINTX_asimd_T1_A': 'VRINTX_asimd_T1_Q', 'aarch32_VRINTZ_asimd_T1_A': 'VRINTZ_asimd_T1_Q', 'aarch32_VCVT_hs_T1A1_A': 'VCVT_sh_A1', 'aarch32_VCVTA_asimd_T1_A': 'VCVTM_asimd_T1_Q', 'aarch32_VRECPE_T1_A': 'VRECPE_T1_Q', 'aarch32_VRSQRTE_T1_A': 'VRSQRTE_T1_Q', 'aarch32_VCVT_is_T1_A': 'VCVT_is_T1_Q', 'aarch32_VTBL_T1A1_A': 'VTBX_A1', 'aarch32_VDUP_s_T1A1_A': 'VDUP_s_A1_Q', 'aarch32_VADDL_T1A1_A': 'VADDW_A1', 'aarch32_VSUBL_T1A1_A': 'VSUBW_A1', 'aarch32_VADDHN_T1A1_A': 'VADDHN_A1', 'aarch32_VSUBHN_T1A1_A': 'VSUBHN_A1', 'aarch32_VQDMLAL_T1A1_A': 'VQDMLAL_A1', 'aarch32_VABA_T2A2_A': 'VABAL_A1', 'aarch32_VQDMLSL_T1A1_A': 'VQDMLSL_A1', 'aarch32_VQDMULL_T1A1_A': 'VQDMULL_A1', 'aarch32_VABD_i_T2A2_A': 'VABDL_i_A1', 'aarch32_VMLA_i_T2A2_A': 'VMLSL_i_A1', 'aarch32_VRADDHN_T1A1_A': 'VRADDHN_A1', 'aarch32_VRSUBHN_T1A1_A': 'VRSUBHN_A1', 'aarch32_VMUL_i_T2_A': 'VMULL_i_T1', 'aarch32_VMLA_s_T1_A': 'VMLS_s_T1_Q', 'aarch32_VQDMLAL_T2A2_A': 'VQDMLAL_A2', 'aarch32_VMLA_s_T2A2_A': 'VMLSL_s_A1', 'aarch32_VQDMLSL_T2A2_A': 'VQDMLSL_A2', 'aarch32_VQDMULL_T2A2_A': 'VQDMULL_A2', 'aarch32_VMUL_s_T1_A': 'VMUL_s_T1_Q', 'aarch32_VMUL_s_T2A2_A': 'VMULL_s_A1', 'aarch32_VQDMULH_T2A2_A': 'VQDMULH_A2_Q', 'aarch32_VQRDMULH_T2A2_A': 'VQRDMULH_A2_Q', 'aarch32_VQRDMLAH_T2_A': 'VQRDMLAH_T2_Q', 'aarch32_VQRDMLSH_T2_A': 'VQRDMLSH_T2_Q', 'aarch32_VSHR_T1A1_A': 'VSHR_A1_Q', 'aarch32_VSRA_T1A1_A': 'VSRA_A1_Q', 'aarch32_VMOVL_T1A1_A': 'VMOVL_A1', 'aarch32_VRSHR_T1A1_A': 'VRSHR_A1_Q', 'aarch32_VRSRA_T1A1_A': 'VRSRA_A1_D', 'aarch32_VQSHL_i_T1A1_A': 'VQSHLU_i_A1_Q', 'aarch32_VQSHRN_T1A1_A': 'VQSHRUN_A1', 'aarch32_VQRSHRN_T1A1_A': 'VQRSHRUN_A1', 'aarch32_VSHLL_T1A1_A': 'VSHLL_A1', 'aarch32_VCVT_xs_T1_A': 'VCVT_xs_T1_Q', 'aarch32_VSHL_i_T1A1_A': 'VSHL_i_A1_Q', 'aarch32_VSHRN_T1A1_A': 'VSHRN_A1', 'aarch32_VRSHRN_T1A1_A': 'VRSHRN_A1', 'aarch32_VSRI_T1A1_A': 'VSRI_A1_Q', 'aarch32_VSLI_T1A1_A': 'VSLI_A1_Q', 'aarch32_VMOV_ss_T1A1_A': 'VMOV_ss_A1', 'aarch32_VMOV_d_T1A1_A': 'VMOV_d_A1', 'aarch32_VSTM_T2A2_A': 'VSTMDB_A2', 'aarch32_VSTM_T1A1_A': 'FSTMDBX_A1', 'aarch32_VLDM_T2A2_A': 'VLDMDB_A2', 'aarch32_VLDM_T1A1_A': 'FLDMDBX_A1', 'aarch32_VSTR_T1_A': 'VSTR_T1_D', 'aarch32_VLDR_T1_A': 'VLDR_l_T1_D', 'aarch32_VMOV_s_T1_A': 'VMOV_s_T1', 'aarch32_VMSR_T1A1_AS': 'VMSR_A1_AS', 'aarch32_VMRS_T1A1_AS': 'VMRS_A1_AS', 'aarch32_VMOV_rs_T1A1_A': 'VMOV_rs_A1', 'aarch32_VMOV_sr_T1A1_A': 'VMOV_sr_A1', 'aarch32_VDUP_r_T1A1_A': 'VDUP_r_A1', 'aarch32_VCADD_T1_A': 'VCADD_T1_Q', 'aarch32_VMMLA_T1_A': 'VMMLA_T1_Q', 'aarch32_VDOT_bf16_T1_A': 'VDOT_T1_Q', 'aarch32_VFMAL_T1_A': 'VFMSL_T1_Q', 'aarch32_MMLA_T1_A': 'VUSMMLA_T1_Q', 'aarch32_VDOT_T1_A': 'VUDOT_T1_Q', 'aarch32_VFMA_bf_T1_A': 'VFMA_bf_T1_Q', 'aarch32_VUSDOT_T1_A': 'VUSDOT_T1_Q', 'aarch32_VCMLA_T1_A': 'VCMLA_T1_Q', 'aarch32_VCMLA_idx_T1_A': 'VCMLA_s_T1_QS', 'aarch32_VFMAL_i_T1_A': 'VFMSL_s_T1_Q', 'aarch32_VDOT_bf16_i_T1_A': 'VDOT_s_T1_Q', 'aarch32_VDOT_s_T1_A': 'VUDOT_s_T1_Q', 'aarch32_VFMA_bfs_T1_A': 'VFMA_bfs_T1_Q', 'aarch32_DOT_T1_A': 'VSUDOT_s_T1_Q', 'aarch32_STM_T2_A': 'STM_T2', 'aarch32_LDM_T2_A': 'LDM_T2', 'aarch32_STMDB_T1_A': 'STMDB_T1', 'aarch32_LDMDB_T1_A': 'LDMDB_T1', 'aarch32_STREX_T1_A': 'STREX_T1', 'aarch32_LDREX_T1_A': 'LDREX_T1', 'aarch32_TBB_T1_A': 'TBH_T1', 'aarch32_STREXB_T1_A': 'STREXB_T1', 'aarch32_STREXH_T1_A': 'STREXH_T1', 'aarch32_STREXD_T1_A': 'STREXD_T1', 'aarch32_LDREXB_T1_A': 'LDREXB_T1', 'aarch32_LDREXH_T1_A': 'LDREXH_T1', 'aarch32_LDREXD_T1_A': 'LDREXD_T1', 'aarch32_STLB_T1_A': 'STLB_T1', 'aarch32_STLH_T1_A': 'STLH_T1', 'aarch32_STL_T1_A': 'STL_T1', 'aarch32_STLEXB_T1_A': 'STLEXB_T1', 'aarch32_STLEXH_T1_A': 'STLEXH_T1', 'aarch32_STLEX_T1_A': 'STLEX_T1', 'aarch32_STLEXD_T1_A': 'STLEXD_T1', 'aarch32_LDAB_T1_A': 'LDAB_T1', 'aarch32_LDAH_T1_A': 'LDAH_T1', 'aarch32_LDA_T1_A': 'LDA_T1', 'aarch32_LDAEXB_T1_A': 'LDAEXB_T1', 'aarch32_LDAEXH_T1_A': 'LDAEXH_T1', 'aarch32_LDAEX_T1_A': 'LDAEX_T1', 'aarch32_LDAEXD_T1_A': 'LDAEXD_T1', 'aarch32_STRD_i_T1_A': 'STRD_i_T1_pre', 'aarch32_LDRD_i_T1_A': 'LDRD_i_T1_pre', 'aarch32_LDRD_l_T1_A': 'LDRD_l_T1', 'aarch32_AND_r_T2_A': 'ANDS_r_T2_RRX', 'aarch32_TST_r_T2_A': 'TST_r_T2_RRX', 'aarch32_BIC_r_T2_A': 'BICS_r_T2_RRX', 'aarch32_ORR_r_T2_A': 'ORRS_r_T2_RRX', 'aarch32_MOV_r_T3_A': 'MOVS_r_T3_RRX', 'aarch32_ORN_r_T1_A': 'ORNS_r_T1_RRX', 'aarch32_MVN_r_T2_A': 'MVNS_r_T2_RRX', 'aarch32_EOR_r_T2_A': 'EORS_r_T2_RRX', 'aarch32_TEQ_r_T1_A': 'TEQ_r_T1_RRX', 'aarch32_PKH_T1_A': 'PKHTB_T1', 'aarch32_ADD_r_T3_A': 'ADDS_r_T3_RRX', 'aarch32_ADD_SP_r_T3_A': 'ADDS_SP_r_T3_RRX', 'aarch32_CMN_r_T2_A': 'CMN_r_T2_RRX', 'aarch32_ADC_r_T2_A': 'ADCS_r_T2_RRX', 'aarch32_SBC_r_T2_A': 'SBCS_r_T2_RRX', 'aarch32_SUB_r_T2_A': 'SUBS_r_T2_RRX', 'aarch32_SUB_SP_r_T1_A': 'SUBS_SP_r_T1_RRX', 'aarch32_CMP_r_T3_A': 'CMP_r_T3_RRX', 'aarch32_RSB_r_T1_A': 'RSBS_r_T1_RRX', 'aarch32_MSR_r_T1_AS': 'MSR_r_T1_AS', 'aarch32_MSR_br_T1_AS': 'MSR_br_T1_AS', 'aarch32_NOP_T2_A': 'NOP_T2', 'aarch32_YIELD_T2_A': 'YIELD_T2', 'aarch32_WFE_T2_A': 'WFE_T2', 'aarch32_WFI_T2_A': 'WFI_T2', 'aarch32_SEV_T2_A': 'SEV_T2', 'aarch32_SEVL_T2_A': 'SEVL_T2', 'aarch32_ESB_T1_A': 'ESB_T1', 'aarch32_TSB_T1_A': 'TSB_T1', 'aarch32_CSDB_T1_A': 'CSDB_T1', 'aarch32_DBG_T1_A': 'DBG_T1', 'aarch32_CPS_T2_AS': 'CPSID_T2_ASM', 'aarch32_CLREX_T1_A': 'CLREX_T1', 'aarch32_DSB_T1_A': 'DSB_T1', 'aarch32_SSBB_T1_A': 'SSBB_T1', 'aarch32_PSSBB_T1_A': 'PSSBB_T1', 'aarch32_DMB_T1_A': 'DMB_T1', 'aarch32_ISB_T1_A': 'ISB_T1', 'aarch32_SB_T1_A': 'SB_T1', 'aarch32_BXJ_T1_A': 'BXJ_T1', 'aarch32_SUB_i_T5_AS': 'SUBS_PC_T5_AS', 'aarch32_ERET_T1_A': 'ERET_T1', 'aarch32_MRS_T1_AS': 'MRS_T1_AS', 'aarch32_MRS_br_T1_AS': 'MRS_br_T1_AS', 'aarch32_DCPS1_T1_A': 'DCPS1_T1', 'aarch32_DCPS2_T1_A': 'DCPS2_T1', 'aarch32_DCPS3_T1_A': 'DCPS3_T1', 'aarch32_HVC_T1_A': 'HVC_T1', 'aarch32_SMC_T1_AS': 'SMC_T1_AS', 'aarch32_UDF_T2_A': 'UDF_T2', 'aarch32_B_T3_A': 'B_T3', 'aarch32_B_T4_A': 'B_T4', 'aarch32_BL_i_T2_A': 'BL_i_T2', 'aarch32_BL_i_T1_A': 'BL_i_T1', 'aarch32_AND_i_T1_A': 'ANDS_i_T1', 'aarch32_TST_i_T1_A': 'TST_i_T1', 'aarch32_BIC_i_T1_A': 'BICS_i_T1', 'aarch32_ORR_i_T1_A': 'ORRS_i_T1', 'aarch32_MOV_i_T2_A': 'MOVS_i_T2', 'aarch32_ORN_i_T1_A': 'ORNS_i_T1', 'aarch32_MVN_i_T1_A': 'MVNS_i_T1', 'aarch32_EOR_i_T1_A': 'EORS_i_T1', 'aarch32_TEQ_i_T1_A': 'TEQ_i_T1', 'aarch32_ADD_i_T3_A': 'ADDS_i_T3', 'aarch32_ADD_SP_i_T3_A': 'ADDS_SP_i_T3', 'aarch32_CMN_i_T1_A': 'CMN_i_T1', 'aarch32_ADC_i_T1_A': 'ADCS_i_T1', 'aarch32_SBC_i_T1_A': 'SBCS_i_T1', 'aarch32_SUB_i_T3_A': 'SUBS_i_T3', 'aarch32_SUB_SP_i_T2_A': 'SUBS_SP_i_T2', 'aarch32_CMP_i_T2_A': 'CMP_i_T2', 'aarch32_RSB_i_T2_A': 'RSBS_i_T2', 'aarch32_ADD_i_T4_A': 'ADD_i_T4', 'aarch32_ADD_SP_i_T4_A': 'ADD_SP_i_T4', 'aarch32_SUB_i_T4_A': 'SUB_i_T4', 'aarch32_SUB_SP_i_T3_A': 'SUB_SP_i_T3', 'aarch32_MOV_i_T3_A': 'MOV_i_T3', 'aarch32_MOVT_T1_A': 'MOVT_T1', 'aarch32_SSAT_T1_A': 'SSAT_T1_ASR', 'aarch32_SSAT16_T1_A': 'SSAT16_T1', 'aarch32_SBFX_T1_A': 'SBFX_T1', 'aarch32_BFI_T1_A': 'BFI_T1', 'aarch32_BFC_T1_A': 'BFC_T1', 'aarch32_USAT_T1_A': 'USAT_T1_ASR', 'aarch32_USAT16_T1_A': 'USAT16_T1', 'aarch32_UBFX_T1_A': 'UBFX_T1', 'aarch32_VST4_m_T1A1_A': 'VST4_m_A1_posti', 'aarch32_VST3_m_T1A1_A': 'VST3_m_A1_posti', 'aarch32_VLD4_m_T1A1_A': 'VLD4_m_A1_posti', 'aarch32_VLD3_m_T1A1_A': 'VLD3_m_A1_posti', 'aarch32_VLD1_a_T1A1_A': 'VLD1_a_A1_posti', 'aarch32_VLD2_a_T1A1_A': 'VLD2_a_A1_posti', 'aarch32_VLD3_a_T1A1_A': 'VLD3_a_A1_posti', 'aarch32_VLD4_a_T1A1_A': 'VLD4_a_A1_posti', 'aarch32_STRB_r_T2_A': 'STRB_r_T2', 'aarch32_LDRB_r_T2_A': 'LDRB_r_T2', 'aarch32_PLD_r_T1_A': 'PLDW_r_T1', 'aarch32_STRH_r_T2_A': 'STRH_r_T2', 'aarch32_LDRH_r_T2_A': 'LDRH_r_T2', 'aarch32_STR_r_T2_A': 'STR_r_T2', 'aarch32_LDR_r_T2_A': 'LDR_r_T2', 'aarch32_STRB_i_T3_A': 'STRB_i_T3_pre', 'aarch32_LDRB_i_T3_A': 'LDRB_i_T3_pre', 'aarch32_STRH_i_T3_A': 'STRH_i_T3_pre', 'aarch32_LDRH_i_T3_A': 'LDRH_i_T3_pre', 'aarch32_STR_i_T4_A': 'STR_i_T4_pre', 'aarch32_LDR_i_T4_A': 'LDR_i_T4_pre', 'aarch32_PLD_i_T2_A': 'PLDW_i_T2', 'aarch32_STRBT_T1_A': 'STRBT_T1', 'aarch32_LDRBT_T1_A': 'LDRBT_T1', 'aarch32_STRHT_T1_A': 'STRHT_T1', 'aarch32_LDRHT_T1_A': 'LDRHT_T1', 'aarch32_STRT_T1_A': 'STRT_T1', 'aarch32_LDRT_T1_A': 'LDRT_T1', 'aarch32_STRB_i_T2_A': 'STRB_i_T2', 'aarch32_LDRB_i_T2_A': 'LDRB_i_T2', 'aarch32_PLD_i_T1_A': 'PLDW_i_T1', 'aarch32_STRH_i_T2_A': 'STRH_i_T2', 'aarch32_LDRH_i_T2_A': 'LDRH_i_T2', 'aarch32_STR_i_T3_A': 'STR_i_T3', 'aarch32_LDR_i_T3_A': 'LDR_i_T3', 'aarch32_PLD_l_T1_A': 'PLD_l_T1', 'aarch32_LDRB_l_T1_A': 'LDRB_l_T1', 'aarch32_LDRH_l_T1_A': 'LDRH_l_T1', 'aarch32_LDR_l_T2_A': 'LDR_l_T2', 'aarch32_LDRSB_r_T2_A': 'LDRSB_r_T2', 'aarch32_PLI_r_T1_A': 'PLI_r_T1', 'aarch32_LDRSH_r_T2_A': 'LDRSH_r_T2', 'aarch32_LDRSB_i_T2_A': 'LDRSB_i_T2_pre', 'aarch32_LDRSH_i_T2_A': 'LDRSH_i_T2_pre', 'aarch32_PLI_i_T2_A': 'PLI_i_T2', 'aarch32_LDRSBT_T1_A': 'LDRSBT_T1', 'aarch32_LDRSHT_T1_A': 'LDRSHT_T1', 'aarch32_LDRSB_i_T1_A': 'LDRSB_i_T1', 'aarch32_PLI_i_T1_A': 'PLI_i_T1', 'aarch32_LDRSH_i_T1_A': 'LDRSH_i_T1', 'aarch32_LDRSB_l_T1_A': 'LDRSB_l_T1', 'aarch32_PLI_i_T3_A': 'PLI_i_T3', 'aarch32_LDRSH_l_T1_A': 'LDRSH_l_T1', 'aarch32_MOV_rr_T2_A': 'MOVS_rr_T2', 'aarch32_SXTAH_T1_A': 'SXTAH_T1', 'aarch32_SXTH_T2_A': 'SXTH_T2', 'aarch32_UXTAH_T1_A': 'UXTAH_T1', 'aarch32_UXTH_T2_A': 'UXTH_T2', 'aarch32_SXTAB16_T1_A': 'SXTAB16_T1', 'aarch32_SXTB16_T1_A': 'SXTB16_T1', 'aarch32_UXTAB16_T1_A': 'UXTAB16_T1', 'aarch32_UXTB16_T1_A': 'UXTB16_T1', 'aarch32_SXTAB_T1_A': 'SXTAB_T1', 'aarch32_SXTB_T2_A': 'SXTB_T2', 'aarch32_UXTAB_T1_A': 'UXTAB_T1', 'aarch32_UXTB_T2_A': 'UXTB_T2', 'aarch32_SADD8_T1_A': 'SADD8_T1', 'aarch32_QADD8_T1_A': 'QADD8_T1', 'aarch32_SHADD8_T1_A': 'SHADD8_T1', 'aarch32_UADD8_T1_A': 'UADD8_T1', 'aarch32_UQADD8_T1_A': 'UQADD8_T1', 'aarch32_UHADD8_T1_A': 'UHADD8_T1', 'aarch32_SADD16_T1_A': 'SADD16_T1', 'aarch32_QADD16_T1_A': 'QADD16_T1', 'aarch32_SHADD16_T1_A': 'SHADD16_T1', 'aarch32_UADD16_T1_A': 'UADD16_T1', 'aarch32_UQADD16_T1_A': 'UQADD16_T1', 'aarch32_UHADD16_T1_A': 'UHADD16_T1', 'aarch32_SASX_T1_A': 'SASX_T1', 'aarch32_QASX_T1_A': 'QASX_T1', 'aarch32_SHASX_T1_A': 'SHASX_T1', 'aarch32_UASX_T1_A': 'UASX_T1', 'aarch32_UQASX_T1_A': 'UQASX_T1', 'aarch32_UHASX_T1_A': 'UHASX_T1', 'aarch32_SSUB8_T1_A': 'SSUB8_T1', 'aarch32_QSUB8_T1_A': 'QSUB8_T1', 'aarch32_SHSUB8_T1_A': 'SHSUB8_T1', 'aarch32_USUB8_T1_A': 'USUB8_T1', 'aarch32_UQSUB8_T1_A': 'UQSUB8_T1', 'aarch32_UHSUB8_T1_A': 'UHSUB8_T1', 'aarch32_SSUB16_T1_A': 'SSUB16_T1', 'aarch32_QSUB16_T1_A': 'QSUB16_T1', 'aarch32_SHSUB16_T1_A': 'SHSUB16_T1', 'aarch32_USUB16_T1_A': 'USUB16_T1', 'aarch32_UQSUB16_T1_A': 'UQSUB16_T1', 'aarch32_UHSUB16_T1_A': 'UHSUB16_T1', 'aarch32_SSAX_T1_A': 'SSAX_T1', 'aarch32_QSAX_T1_A': 'QSAX_T1', 'aarch32_SHSAX_T1_A': 'SHSAX_T1', 'aarch32_USAX_T1_A': 'USAX_T1', 'aarch32_UQSAX_T1_A': 'UQSAX_T1', 'aarch32_UHSAX_T1_A': 'UHSAX_T1', 'aarch32_QADD_T1_A': 'QADD_T1', 'aarch32_QDADD_T1_A': 'QDADD_T1', 'aarch32_QSUB_T1_A': 'QSUB_T1', 'aarch32_QDSUB_T1_A': 'QDSUB_T1', 'aarch32_REV_T2_A': 'REV_T2', 'aarch32_REV16_T2_A': 'REV16_T2', 'aarch32_RBIT_T1_A': 'RBIT_T1', 'aarch32_REVSH_T2_A': 'REVSH_T2', 'aarch32_SEL_T1_A': 'SEL_T1', 'aarch32_CLZ_T1_A': 'CLZ_T1', 'aarch32_CRC32_T1_A': 'CRC32CW_T1', 'aarch32_MLA_T1_A': 'MLA_T1', 'aarch32_MLS_T1_A': 'MLS_T1', 'aarch32_MUL_T2_A': 'MUL_T2', 'aarch32_SMLABB_T1_A': 'SMLATT_T1', 'aarch32_SMULBB_T1_A': 'SMULTT_T1', 'aarch32_SMLAD_T1_A': 'SMLADX_T1', 'aarch32_SMUAD_T1_A': 'SMUADX_T1', 'aarch32_SMLAWB_T1_A': 'SMLAWT_T1', 'aarch32_SMULWB_T1_A': 'SMULWT_T1', 'aarch32_SMLSD_T1_A': 'SMLSDX_T1', 'aarch32_SMUSD_T1_A': 'SMUSDX_T1', 'aarch32_SMMLA_T1_A': 'SMMLAR_T1', 'aarch32_SMMUL_T1_A': 'SMMULR_T1', 'aarch32_SMMLS_T1_A': 'SMMLSR_T1', 'aarch32_USADA8_T1_A': 'USADA8_T1', 'aarch32_USAD8_T1_A': 'USAD8_T1', 'aarch32_SMULL_T1_A': 'SMULL_T1', 'aarch32_SDIV_T1_A': 'SDIV_T1', 'aarch32_UMULL_T1_A': 'UMULL_T1', 'aarch32_UDIV_T1_A': 'UDIV_T1', 'aarch32_SMLAL_T1_A': 'SMLAL_T1', 'aarch32_SMLALBB_T1_A': 'SMLALTT_T1', 'aarch32_SMLALD_T1_A': 'SMLALDX_T1', 'aarch32_SMLSLD_T1_A': 'SMLSLDX_T1', 'aarch32_UMLAL_T1_A': 'UMLAL_T1', 'aarch32_UMAAL_T1_A': 'UMAAL_T1', 'aarch32_STRH_r_A1_A': 'STRH_r_A1_pre', 'aarch32_LDRD_r_A1_A': 'LDRD_r_A1_pre', 'aarch32_STRD_r_A1_A': 'STRD_r_A1_pre', 'aarch32_LDRH_r_A1_A': 'LDRH_r_A1_pre', 'aarch32_LDRSB_r_A1_A': 'LDRSB_r_A1_pre', 'aarch32_LDRSH_r_A1_A': 'LDRSH_r_A1_pre', 'aarch32_STRHT_A2_A': 'STRHT_A2', 'aarch32_LDRHT_A2_A': 'LDRHT_A2', 'aarch32_LDRSBT_A2_A': 'LDRSBT_A2', 'aarch32_LDRSHT_A2_A': 'LDRSHT_A2', 'aarch32_LDRD_l_A1_A': 'LDRD_l_A1', 'aarch32_LDRH_l_A1_A': 'LDRH_l_A1', 'aarch32_LDRSB_l_A1_A': 'LDRSB_l_A1', 'aarch32_LDRSH_l_A1_A': 'LDRSH_l_A1', 'aarch32_LDRD_i_A1_A': 'LDRD_i_A1_pre', 'aarch32_STRH_i_A1_A': 'STRH_i_A1_pre', 'aarch32_STRD_i_A1_A': 'STRD_i_A1_pre', 'aarch32_LDRH_i_A1_A': 'LDRH_i_A1_pre', 'aarch32_LDRSB_i_A1_A': 'LDRSB_i_A1_pre', 'aarch32_LDRSH_i_A1_A': 'LDRSH_i_A1_pre', 'aarch32_STRHT_A1_A': 'STRHT_A1', 'aarch32_LDRHT_A1_A': 'LDRHT_A1', 'aarch32_LDRSBT_A1_A': 'LDRSBT_A1', 'aarch32_LDRSHT_A1_A': 'LDRSHT_A1', 'aarch32_MUL_A1_A': 'MULS_A1', 'aarch32_MLA_A1_A': 'MLAS_A1', 'aarch32_UMAAL_A1_A': 'UMAAL_A1', 'aarch32_MLS_A1_A': 'MLS_A1', 'aarch32_UMULL_A1_A': 'UMULLS_A1', 'aarch32_UMLAL_A1_A': 'UMLALS_A1', 'aarch32_SMULL_A1_A': 'SMULLS_A1', 'aarch32_SMLAL_A1_A': 'SMLALS_A1', 'aarch32_STL_A1_A': 'STL_A1', 'aarch32_STLEX_A1_A': 'STLEX_A1', 'aarch32_STREX_A1_A': 'STREX_A1', 'aarch32_LDA_A1_A': 'LDA_A1', 'aarch32_LDAEX_A1_A': 'LDAEX_A1', 'aarch32_LDREX_A1_A': 'LDREX_A1', 'aarch32_STLEXD_A1_A': 'STLEXD_A1', 'aarch32_STREXD_A1_A': 'STREXD_A1', 'aarch32_LDAEXD_A1_A': 'LDAEXD_A1', 'aarch32_LDREXD_A1_A': 'LDREXD_A1', 'aarch32_STLB_A1_A': 'STLB_A1', 'aarch32_STLEXB_A1_A': 'STLEXB_A1', 'aarch32_STREXB_A1_A': 'STREXB_A1', 'aarch32_LDAB_A1_A': 'LDAB_A1', 'aarch32_LDAEXB_A1_A': 'LDAEXB_A1', 'aarch32_LDREXB_A1_A': 'LDREXB_A1', 'aarch32_STLH_A1_A': 'STLH_A1', 'aarch32_STLEXH_A1_A': 'STLEXH_A1', 'aarch32_STREXH_A1_A': 'STREXH_A1', 'aarch32_LDAH_A1_A': 'LDAH_A1', 'aarch32_LDAEXH_A1_A': 'LDAEXH_A1', 'aarch32_LDREXH_A1_A': 'LDREXH_A1', 'aarch32_BX_A1_A': 'BX_A1', 'aarch32_BXJ_A1_A': 'BXJ_A1', 'aarch32_BLX_r_A1_A': 'BLX_r_A1', 'aarch32_CLZ_A1_A': 'CLZ_A1', 'aarch32_ERET_A1_A': 'ERET_A1', 'aarch32_HLT_A1_A': 'HLT_A1', 'aarch32_BKPT_A1_A': 'BKPT_A1', 'aarch32_HVC_A1_A': 'HVC_A1', 'aarch32_SMC_A1_AS': 'SMC_A1_AS', 'aarch32_MRS_A1_AS': 'MRS_A1_AS', 'aarch32_MRS_br_A1_AS': 'MRS_br_A1_AS', 'aarch32_MSR_r_A1_AS': 'MSR_r_A1_AS', 'aarch32_MSR_br_A1_AS': 'MSR_br_A1_AS', 'aarch32_CRC32_A1_A': 'CRC32CW_A1', 'aarch32_QADD_A1_A': 'QADD_A1', 'aarch32_QSUB_A1_A': 'QSUB_A1', 'aarch32_QDADD_A1_A': 'QDADD_A1', 'aarch32_QDSUB_A1_A': 'QDSUB_A1', 'aarch32_SMLABB_A1_A': 'SMLATT_A1', 'aarch32_SMLAWB_A1_A': 'SMLAWT_A1', 'aarch32_SMULWB_A1_A': 'SMULWT_A1', 'aarch32_SMLALBB_A1_A': 'SMLALTT_A1', 'aarch32_SMULBB_A1_A': 'SMULTT_A1', 'aarch32_AND_r_A1_A': 'ANDS_r_A1_RRX', 'aarch32_EOR_r_A1_A': 'EORS_r_A1_RRX', 'aarch32_SUB_r_A1_A': 'SUBS_r_A1_RRX', 'aarch32_SUB_SP_r_A1_A': 'SUBS_SP_r_A1_RRX', 'aarch32_RSB_r_A1_A': 'RSBS_r_A1_RRX', 'aarch32_ADD_r_A1_A': 'ADDS_r_A1_RRX', 'aarch32_ADD_SP_r_A1_A': 'ADDS_SP_r_A1_RRX', 'aarch32_ADC_r_A1_A': 'ADCS_r_A1_RRX', 'aarch32_SBC_r_A1_A': 'SBCS_r_A1_RRX', 'aarch32_RSC_r_A1_A': 'RSCS_r_A1_RRX', 'aarch32_TST_r_A1_A': 'TST_r_A1_RRX', 'aarch32_TEQ_r_A1_A': 'TEQ_r_A1_RRX', 'aarch32_CMP_r_A1_A': 'CMP_r_A1_RRX', 'aarch32_CMN_r_A1_A': 'CMN_r_A1_RRX', 'aarch32_ORR_r_A1_A': 'ORRS_r_A1_RRX', 'aarch32_MOV_r_A1_A': 'MOVS_r_A1_RRX', 'aarch32_BIC_r_A1_A': 'BICS_r_A1_RRX', 'aarch32_MVN_r_A1_A': 'MVNS_r_A1_RRX', 'aarch32_AND_rr_A1_A': 'ANDS_rr_A1', 'aarch32_EOR_rr_A1_A': 'EORS_rr_A1', 'aarch32_SUB_rr_A1_A': 'SUBS_rr_A1', 'aarch32_RSB_rr_A1_A': 'RSBS_rr_A1', 'aarch32_ADD_rr_A1_A': 'ADDS_rr_A1', 'aarch32_ADC_rr_A1_A': 'ADCS_rr_A1', 'aarch32_SBC_rr_A1_A': 'SBCS_rr_A1', 'aarch32_RSC_rr_A1_A': 'RSCS_rr_A1', 'aarch32_TST_rr_A1_A': 'TST_rr_A1', 'aarch32_TEQ_rr_A1_A': 'TEQ_rr_A1', 'aarch32_CMP_rr_A1_A': 'CMP_rr_A1', 'aarch32_CMN_rr_A1_A': 'CMN_rr_A1', 'aarch32_ORR_rr_A1_A': 'ORRS_rr_A1', 'aarch32_MOV_rr_A1_A': 'MOVS_rr_A1', 'aarch32_BIC_rr_A1_A': 'BICS_rr_A1', 'aarch32_MVN_rr_A1_A': 'MVNS_rr_A1', 'aarch32_AND_i_A1_A': 'ANDS_i_A1', 'aarch32_EOR_i_A1_A': 'EORS_i_A1', 'aarch32_SUB_i_A1_A': 'SUBS_i_A1', 'aarch32_SUB_SP_i_A1_A': 'SUBS_SP_i_A1', 'aarch32_RSB_i_A1_A': 'RSBS_i_A1', 'aarch32_ADD_i_A1_A': 'ADDS_i_A1', 'aarch32_ADD_SP_i_A1_A': 'ADDS_SP_i_A1', 'aarch32_ADC_i_A1_A': 'ADCS_i_A1', 'aarch32_SBC_i_A1_A': 'SBCS_i_A1', 'aarch32_RSC_i_A1_A': 'RSCS_i_A1', 'aarch32_MOV_i_A2_A': 'MOV_i_A2', 'aarch32_MOVT_A1_A': 'MOVT_A1', 'aarch32_MSR_i_A1_AS': 'MSR_i_A1_AS', 'aarch32_NOP_A1_A': 'NOP_A1', 'aarch32_YIELD_A1_A': 'YIELD_A1', 'aarch32_WFE_A1_A': 'WFE_A1', 'aarch32_WFI_A1_A': 'WFI_A1', 'aarch32_SEV_A1_A': 'SEV_A1', 'aarch32_SEVL_A1_A': 'SEVL_A1', 'aarch32_ESB_A1_A': 'ESB_A1', 'aarch32_TSB_A1_A': 'TSB_A1', 'aarch32_CSDB_A1_A': 'CSDB_A1', 'aarch32_DBG_A1_A': 'DBG_A1', 'aarch32_TST_i_A1_A': 'TST_i_A1', 'aarch32_TEQ_i_A1_A': 'TEQ_i_A1', 'aarch32_CMP_i_A1_A': 'CMP_i_A1', 'aarch32_CMN_i_A1_A': 'CMN_i_A1', 'aarch32_ORR_i_A1_A': 'ORRS_i_A1', 'aarch32_MOV_i_A1_A': 'MOVS_i_A1', 'aarch32_BIC_i_A1_A': 'BICS_i_A1', 'aarch32_MVN_i_A1_A': 'MVNS_i_A1', 'aarch32_LDR_l_A1_A': 'LDR_l_A1', 'aarch32_LDRB_l_A1_A': 'LDRB_l_A1', 'aarch32_STR_i_A1_A': 'STR_i_A1_pre', 'aarch32_LDR_i_A1_A': 'LDR_i_A1_pre', 'aarch32_STRB_i_A1_A': 'STRB_i_A1_pre', 'aarch32_LDRB_i_A1_A': 'LDRB_i_A1_pre', 'aarch32_STRT_A1_A': 'STRT_A1', 'aarch32_LDRT_A1_A': 'LDRT_A1', 'aarch32_STRBT_A1_A': 'STRBT_A1', 'aarch32_LDRBT_A1_A': 'LDRBT_A1', 'aarch32_STR_r_A1_A': 'STR_r_A1_pre', 'aarch32_LDR_r_A1_A': 'LDR_r_A1_pre', 'aarch32_STRT_A2_A': 'STRT_A2', 'aarch32_LDRT_A2_A': 'LDRT_A2', 'aarch32_STRB_r_A1_A': 'STRB_r_A1_pre', 'aarch32_LDRB_r_A1_A': 'LDRB_r_A1_pre', 'aarch32_STRBT_A2_A': 'STRBT_A2', 'aarch32_LDRBT_A2_A': 'LDRBT_A2', 'aarch32_SADD16_A1_A': 'SADD16_A1', 'aarch32_SASX_A1_A': 'SASX_A1', 'aarch32_SSAX_A1_A': 'SSAX_A1', 'aarch32_SSUB16_A1_A': 'SSUB16_A1', 'aarch32_SADD8_A1_A': 'SADD8_A1', 'aarch32_SSUB8_A1_A': 'SSUB8_A1', 'aarch32_QADD16_A1_A': 'QADD16_A1', 'aarch32_QASX_A1_A': 'QASX_A1', 'aarch32_QSAX_A1_A': 'QSAX_A1', 'aarch32_QSUB16_A1_A': 'QSUB16_A1', 'aarch32_QADD8_A1_A': 'QADD8_A1', 'aarch32_QSUB8_A1_A': 'QSUB8_A1', 'aarch32_SHADD16_A1_A': 'SHADD16_A1', 'aarch32_SHASX_A1_A': 'SHASX_A1', 'aarch32_SHSAX_A1_A': 'SHSAX_A1', 'aarch32_SHSUB16_A1_A': 'SHSUB16_A1', 'aarch32_SHADD8_A1_A': 'SHADD8_A1', 'aarch32_SHSUB8_A1_A': 'SHSUB8_A1', 'aarch32_UADD16_A1_A': 'UADD16_A1', 'aarch32_UASX_A1_A': 'UASX_A1', 'aarch32_USAX_A1_A': 'USAX_A1', 'aarch32_USUB16_A1_A': 'USUB16_A1', 'aarch32_UADD8_A1_A': 'UADD8_A1', 'aarch32_USUB8_A1_A': 'USUB8_A1', 'aarch32_UQADD16_A1_A': 'UQADD16_A1', 'aarch32_UQASX_A1_A': 'UQASX_A1', 'aarch32_UQSAX_A1_A': 'UQSAX_A1', 'aarch32_UQSUB16_A1_A': 'UQSUB16_A1', 'aarch32_UQADD8_A1_A': 'UQADD8_A1', 'aarch32_UQSUB8_A1_A': 'UQSUB8_A1', 'aarch32_UHADD16_A1_A': 'UHADD16_A1', 'aarch32_UHASX_A1_A': 'UHASX_A1', 'aarch32_UHSAX_A1_A': 'UHSAX_A1', 'aarch32_UHSUB16_A1_A': 'UHSUB16_A1', 'aarch32_UHADD8_A1_A': 'UHADD8_A1', 'aarch32_UHSUB8_A1_A': 'UHSUB8_A1', 'aarch32_SEL_A1_A': 'SEL_A1', 'aarch32_PKH_A1_A': 'PKHTB_A1', 'aarch32_SSAT16_A1_A': 'SSAT16_A1', 'aarch32_USAT16_A1_A': 'USAT16_A1', 'aarch32_REV_A1_A': 'REV_A1', 'aarch32_REV16_A1_A': 'REV16_A1', 'aarch32_RBIT_A1_A': 'RBIT_A1', 'aarch32_REVSH_A1_A': 'REVSH_A1', 'aarch32_SSAT_A1_A': 'SSAT_A1_ASR', 'aarch32_USAT_A1_A': 'USAT_A1_ASR', 'aarch32_SXTAB16_A1_A': 'SXTAB16_A1', 'aarch32_SXTB16_A1_A': 'SXTB16_A1', 'aarch32_SXTAB_A1_A': 'SXTAB_A1', 'aarch32_SXTB_A1_A': 'SXTB_A1', 'aarch32_SXTAH_A1_A': 'SXTAH_A1', 'aarch32_SXTH_A1_A': 'SXTH_A1', 'aarch32_UXTAB16_A1_A': 'UXTAB16_A1', 'aarch32_UXTB16_A1_A': 'UXTB16_A1', 'aarch32_UXTAB_A1_A': 'UXTAB_A1', 'aarch32_UXTB_A1_A': 'UXTB_A1', 'aarch32_UXTAH_A1_A': 'UXTAH_A1', 'aarch32_UXTH_A1_A': 'UXTH_A1', 'aarch32_SMLAD_A1_A': 'SMLADX_A1', 'aarch32_SMLSD_A1_A': 'SMLSDX_A1', 'aarch32_SMUAD_A1_A': 'SMUADX_A1', 'aarch32_SMUSD_A1_A': 'SMUSDX_A1', 'aarch32_SDIV_A1_A': 'SDIV_A1', 'aarch32_UDIV_A1_A': 'UDIV_A1', 'aarch32_SMLALD_A1_A': 'SMLALDX_A1', 'aarch32_SMLSLD_A1_A': 'SMLSLDX_A1', 'aarch32_SMMLA_A1_A': 'SMMLAR_A1', 'aarch32_SMMLS_A1_A': 'SMMLSR_A1', 'aarch32_SMMUL_A1_A': 'SMMULR_A1', 'aarch32_USADA8_A1_A': 'USADA8_A1', 'aarch32_USAD8_A1_A': 'USAD8_A1', 'aarch32_BFI_A1_A': 'BFI_A1', 'aarch32_BFC_A1_A': 'BFC_A1', 'aarch32_UDF_A1_A': 'UDF_A1', 'aarch32_SBFX_A1_A': 'SBFX_A1', 'aarch32_UBFX_A1_A': 'UBFX_A1', 'aarch32_RFE_A1_AS': 'RFEIB_A1_AS', 'aarch32_SRS_A1_AS': 'SRSIB_A1_AS', 'aarch32_STMDA_A1_A': 'STMDA_A1', 'aarch32_LDMDA_A1_A': 'LDMDA_A1', 'aarch32_STM_A1_A': 'STM_A1', 'aarch32_LDM_A1_A': 'LDM_A1', 'aarch32_STM_u_A1_AS': 'STM_u_A1_AS', 'aarch32_STMDB_A1_A': 'STMDB_A1', 'aarch32_LDMDB_A1_A': 'LDMDB_A1', 'aarch32_LDM_u_A1_AS': 'LDM_u_A1_AS', 'aarch32_STMIB_A1_A': 'STMIB_A1', 'aarch32_LDMIB_A1_A': 'LDMIB_A1', 'aarch32_LDM_e_A1_AS': 'LDM_e_A1_AS', 'aarch32_B_A1_A': 'B_A1', 'aarch32_VSEL_A1_A': 'VSELGT_A1_D', 'aarch32_VMAXNM_A2_A': 'VMINNM_A2_D', 'aarch32_VMOVX_A1_A': 'VMOVX_A1', 'aarch32_VINS_A1_A': 'VINS_A1', 'aarch32_VRINTA_vfp_A1_A': 'VRINTM_vfp_A1_D', 'aarch32_VCVTA_vfp_A1_A': 'VCVTM_vfp_A1_D', 'aarch32_VABS_A2_A': 'VABS_A2_D', 'aarch32_VNEG_A2_A': 'VNEG_A2_D', 'aarch32_VSQRT_A1_A': 'VSQRT_A1_D', 'aarch32_VRINTZ_vfp_A1_A': 'VRINTZ_vfp_A1_D', 'aarch32_VRINTX_vfp_A1_A': 'VRINTX_vfp_A1_D', 'aarch32_VCVT_iv_A1_A': 'VCVT_siv_A1_D', 'aarch32_VJCVT_A1_A': 'VJCVT_A1', 'aarch32_VCVT_xv_A1_A': 'VCVT_xv_A1_D', 'aarch32_VMOV_i_A2_A': 'VMOV_i_A2_D', 'aarch32_VMLA_f_A2_A': 'VMLS_f_A2_D', 'aarch32_VNMLA_A1_A': 'VNMLA_A1_D', 'aarch32_VMUL_f_A2_A': 'VMUL_f_A2_D', 'aarch32_VNMLA_A2_A': 'VNMUL_A1_D', 'aarch32_VADD_f_A2_A': 'VADD_f_A2_D', 'aarch32_VSUB_f_A2_A': 'VSUB_f_A2_D', 'aarch32_VDIV_A1_A': 'VDIV_A1_D', 'aarch32_VFNMA_A1_A': 'VFNMA_A1_D', 'aarch32_VFMA_A2_A': 'VFMS_A2_D', 'aarch32_SVC_A1_A': 'SVC_A1', 'aarch32_VCADD_A1_A': 'VCADD_A1_Q', 'aarch32_VMMLA_A1_A': 'VMMLA_A1_Q', 'aarch32_VDOT_bf16_A1_A': 'VDOT_A1_Q', 'aarch32_VFMAL_A1_A': 'VFMSL_A1_Q', 'aarch32_MMLA_A1_A': 'VUSMMLA_A1_Q', 'aarch32_VDOT_A1_A': 'VUDOT_A1_Q', 'aarch32_VFMA_bf_A1_A': 'VFMA_bf_A1_Q', 'aarch32_VUSDOT_A1_A': 'VUSDOT_A1_Q', 'aarch32_VCMLA_A1_A': 'VCMLA_A1_Q', 'aarch32_VCMLA_idx_A1_A': 'VCMLA_s_A1_QS', 'aarch32_VFMAL_i_A1_A': 'VFMSL_s_A1_Q', 'aarch32_VDOT_bf16_i_A1_A': 'VDOT_s_A1_Q', 'aarch32_VDOT_s_A1_A': 'VUDOT_s_A1_Q', 'aarch32_VFMA_bfs_A1_A': 'VFMA_bfs_A1_Q', 'aarch32_DOT_A1_A': 'VSUDOT_s_A1_Q', 'aarch32_VSTR_A1_A': 'VSTR_A1_D', 'aarch32_VLDR_A1_A': 'VLDR_l_A1_D', 'aarch32_VMOV_h_A1_A': 'VMOV_h_A1', 'aarch32_VMOV_s_A1_A': 'VMOV_s_A1', 'aarch32_SETEND_A1_A': 'SETEND_A1', 'aarch32_CPS_A1_AS': 'CPSID_A1_ASM', 'aarch32_SETPAN_A1_A': 'SETPAN_A1', 'aarch32_VFMA_A1_A': 'VFMS_A1_Q', 'aarch32_VADD_f_A1_A': 'VADD_f_A1_Q', 'aarch32_VMLA_f_A1_A': 'VMLS_f_A1_Q', 'aarch32_VMAX_f_A1_A': 'VMIN_f_A1_Q', 'aarch32_VRECPS_A1_A': 'VRECPS_A1_Q', 'aarch32_SHA1C_A1_A': 'SHA1C_A1', 'aarch32_SHA1P_A1_A': 'SHA1P_A1', 'aarch32_VSUB_f_A1_A': 'VSUB_f_A1_Q', 'aarch32_VRSQRTS_A1_A': 'VRSQRTS_A1_Q', 'aarch32_SHA1M_A1_A': 'SHA1M_A1', 'aarch32_SHA1SU0_A1_A': 'SHA1SU0_A1', 'aarch32_VPADD_f_A1_A': 'VPADD_f_A1', 'aarch32_VMUL_f_A1_A': 'VMUL_f_A1_Q', 'aarch32_VACGE_A1_A': 'VACGT_A1_Q', 'aarch32_VPMAX_f_A1_A': 'VPMIN_f_A1', 'aarch32_VMAXNM_A1_A': 'VMINNM_A1_Q', 'aarch32_SHA256H_A1_A': 'SHA256H_A1', 'aarch32_SHA256H2_A1_A': 'SHA256H2_A1', 'aarch32_VABD_f_A1_A': 'VABD_f_A1_Q', 'aarch32_SHA256SU1_A1_A': 'SHA256SU1_A1', 'aarch32_VQRDMLAH_A1_A': 'VQRDMLAH_A1_Q', 'aarch32_VQRDMLSH_A1_A': 'VQRDMLSH_A1_Q', 'aarch32_AESE_A1_A': 'AESE_A1', 'aarch32_AESD_A1_A': 'AESD_A1', 'aarch32_AESMC_A1_A': 'AESMC_A1', 'aarch32_AESIMC_A1_A': 'AESIMC_A1', 'aarch32_VCGT_i_A1_A': 'VCGT_i_A1_Q', 'aarch32_VCGE_i_A1_A': 'VCGE_i_A1_Q', 'aarch32_VCEQ_i_A1_A': 'VCEQ_i_A1_Q', 'aarch32_VCLE_i_A1_A': 'VCLE_i_A1_Q', 'aarch32_VCLT_i_A1_A': 'VCLT_i_A1_Q', 'aarch32_VABS_A1_A': 'VABS_A1_Q', 'aarch32_VNEG_A1_A': 'VNEG_A1_Q', 'aarch32_SHA1H_A1_A': 'SHA1H_A1', 'aarch32_SHA1SU1_A1_A': 'SHA1SU1_A1', 'aarch32_SHA256SU0_A1_A': 'SHA256SU0_A1', 'aarch32_VRINTA_asimd_A1_A': 'VRINTP_asimd_A1_Q', 'aarch32_VRINTX_asimd_A1_A': 'VRINTX_asimd_A1_Q', 'aarch32_VRINTZ_asimd_A1_A': 'VRINTZ_asimd_A1_Q', 'aarch32_VCVTA_asimd_A1_A': 'VCVTM_asimd_A1_Q', 'aarch32_VRECPE_A1_A': 'VRECPE_A1_Q', 'aarch32_VRSQRTE_A1_A': 'VRSQRTE_A1_Q', 'aarch32_VCVT_is_A1_A': 'VCVT_is_A1_Q', 'aarch32_VMUL_i_A2_A': 'VMULL_i_A1', 'aarch32_VMLA_s_A1_A': 'VMLS_s_A1_Q', 'aarch32_VMUL_s_A1_A': 'VMUL_s_A1_Q', 'aarch32_VQRDMLAH_A2_A': 'VQRDMLAH_A2_Q', 'aarch32_VQRDMLSH_A2_A': 'VQRDMLSH_A2_Q', 'aarch32_VCVT_xs_A1_A': 'VCVT_xs_A1_Q', 'aarch32_CLREX_A1_A': 'CLREX_A1', 'aarch32_DSB_A1_A': 'DSB_A1', 'aarch32_SSBB_A1_A': 'SSBB_A1', 'aarch32_PSSBB_A1_A': 'PSSBB_A1', 'aarch32_DMB_A1_A': 'DMB_A1', 'aarch32_ISB_A1_A': 'ISB_A1', 'aarch32_SB_A1_A': 'SB_A1', 'aarch32_PLI_i_A1_A': 'PLI_i_A1', 'aarch32_PLD_l_A1_A': 'PLD_l_A1', 'aarch32_PLD_i_A1_A': 'PLD_i_A1', 'aarch32_PLI_r_A1_A': 'PLI_r_A1_RRX', 'aarch32_PLD_r_A1_A': 'PLD_r_A1_RRX', 'aarch32_VST4_1_T1A1_A': 'VST4_1_A1_posti', 'aarch32_VST4_1_T2A2_A': 'VST4_1_A2_posti', 'aarch32_VST4_1_T3A3_A': 'VST4_1_A3_nowb'}

TAB = "    "

# remove prefix
def r(text, prefix):
    if text.startswith(prefix):
        return text[len(prefix):]
    return text

def to_name(sym):
    if sym in real_names:
        sym = real_names[sym]
    return r(r(sym, "aarch32_"), "aarch64_").rstrip("_").replace("_", " ").title().replace(" ", "")

class Decoder(NopDecodeListener):
    def __init__(self):
        self.tabs = 0
        self.field_sizes = {}
        self.variants = set(["Nop"])
        self.unused_var_stack = []
        self.variant_fields = {}

    def unused_in_scope_vars(self):
        x = []
        for y in self.unused_var_stack:
            x += y
        return x

    def after_listen_case(self, fields):
        if len(fields) != 0:
            print(f"{TAB * self.tabs}_ => None")
        self.tabs -= 1
        print(f"{TAB * self.tabs}}}")

    def after_listen_decode(self, name):
        if name == "A64" or name == "A32":
            self.tabs -= 1
            print("} // end of decoding " + name)

    def after_listen_when(self, _):
        self.tabs -= 1
        self.unused_var_stack.pop()
        print(f"{TAB * self.tabs}}}")

    def listen_case(self, fields):
        def f(field):
            if field.name:
                try:
                    self.unused_var_stack[-1].remove(field.name)
                except:
                    pass
                return field.name
            elif field.concat_names:
                shift = self.field_sizes[field.concat_names[1]]
                return f"({field.concat_names[0]} << {shift}) | {field.concat_names[1]}"
            else:
                mask = (field.run << 1) - 1
                start = field.start
                if start == 0:
                    return f"instr & {mask}"
                else:
                    return f"(instr >> {start}) & {mask}"
        if len(fields) == 1:
            print(f"{TAB * self.tabs}match " + ", ".join([f(field) for field in fields]) + " {")
        else:
            print(f"{TAB * self.tabs}match (" + ", ".join([f(field) for field in fields]) + ") {")
        self.tabs += 1
        return True

    def listen_decode(self, name):
        if name == "A64" or name == "A32":
            print("#[allow(unused_variables)]")
            print("#[allow(non_snake_case)]")
            print("#[allow(unreachable_patterns)]")
            print(f"pub fn decode_{name.lower()}(instr: u32) -> Option<Instr> {{")
            self.tabs += 1
            return True

    def listen_encoding(self, name):
        name = to_name(name)
        self.variants.add(name)
        fields = self.unused_in_scope_vars()

        def to_field(x):
            bits = self.field_sizes[x]
            if bits <= 8:
                ty = "u8"
            elif bits <= 16:
                ty = "u16"
            else:
                ty = "u32"
            return (x, ty)

        self.variant_fields[name] = [to_field(x) for x in fields]
        fields = "" if len(fields) == 0 else (" {" + ", ".join([f"{x}: {x} as _" for x in fields]) + "}")
        print(f"{TAB * self.tabs}Some(Instr::{name}{fields})")

    def listen_field(self, name, start, run):
        self.unused_var_stack[-1].append(name)
        mask = (run << 1) - 1
        self.field_sizes[name] = run
        if start == 0:
            print(f"{TAB * self.tabs}let {name} = instr & {mask};")
        else:
            print(f"{TAB * self.tabs}let {name} = (instr >> {start}) & {mask};")
        return True

    def listen_unallocated(self):
        print(f"{TAB * self.tabs}None")

    def listen_undocumented(self):
        print(f"{TAB * self.tabs}None")

    def listen_unused(self):
        print(f"{TAB * self.tabs}None")

    def listen_nop(self):
        print(f"{TAB * self.tabs}Some(Instr::Nop)")

    def listen_unpredictable(self):
        print(f"{TAB * self.tabs}None")
        return True

    def listen_when(self, values):
        def to_bitmask(x):
            if x.find("x") == -1:
                return None
            return int(x.replace("0", "1").replace("x", "0"), 2)

        def to_maskval(x):
            return int(x.replace("x", "0"), 2)

        def f(val, i):
            if val.empty:
                return ("_", None)
            elif val.notvalue:
                mask = to_bitmask(val.notvalue)
                val = to_maskval(val.notvalue)
                if mask == None:
                    return (f"x{i}", f"x{i} != {val}")
                return (f"x{i}", f"x{i} & {mask} != {val}")
            elif val.value:
                mask = to_bitmask(val.value)
                val = to_maskval(val.value)
                if mask == None:
                    return (f"x{i}", f"x{i} == {val}")
                return (f"x{i}", f"x{i} & {mask} == {val}")
            elif val.range:
                return (f"0b{val.range[0]:b}..=0b{val.range[1]:b}", None)
            else:
                assert False
        vals = [f(val, i) for i, val in enumerate(values)]
        pats = ", ".join([val[0] for val in vals])
        conds = [val[1] for val in vals if val[1]]
        cond = "" if len(conds) == 0 else (" if " + " && ".join(conds))
        if len(vals) == 1:
            print(f"{TAB * self.tabs}{pats}{cond} => {{")
        else:
            print(f"{TAB * self.tabs}({pats}){cond} => {{")
        self.tabs += 1
        self.unused_var_stack.append([])
        return True

dec = Decoder()
parse_asl_decoder_file("../mra_tools/arch/arch_decode.asl", dec)
print()
print("#[allow(non_snake_case)]")
print("#[derive(Debug, PartialEq, Clone)]")
print("pub enum Instr {")
for op in dec.variants:
    fields = dec.variant_fields.get(op, [])
    if len(fields) == 0:
        print(f"    {op},")
    else:
        print(f"    {op} {{")
        for field, ty in fields:
            print(f"        {field}: {ty},")
        print(f"    }},")
print("}")
print()
print("""
#[cfg(test)]
mod tests {
    use super::{decode_a32, Instr};

    #[test]
    fn test() {
        assert_eq!(decode_a32(0xe3a00001).unwrap(), Instr::MovsIA1 { cond: 6, S: 0, Rn: 0, Rd: 0, imm12: 1 });
    }
}""")
